{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 RSSerpent is an open-source software that creates RSS feeds for websites without them. Quick Start \u00b6 Official Instance: https://www.rsserpent.com/ Documentation: https://docs.rsserpent.com/ Thanks \u00b6 The RSSerpent Project is heavily inspired by RSSHub \ud83c\udf89 We pay the highest possible tribute to RSSHub & its maintainers. Sponsors \u00b6 People \u00b6 The RSSerpent Project is created by @queensferry , supported by various project members & contributors .","title":"Introduction"},{"location":"#introduction","text":"RSSerpent is an open-source software that creates RSS feeds for websites without them.","title":"Introduction"},{"location":"#quick-start","text":"Official Instance: https://www.rsserpent.com/ Documentation: https://docs.rsserpent.com/","title":"Quick Start"},{"location":"#thanks","text":"The RSSerpent Project is heavily inspired by RSSHub \ud83c\udf89 We pay the highest possible tribute to RSSHub & its maintainers.","title":"Thanks"},{"location":"#sponsors","text":"","title":"Sponsors"},{"location":"#people","text":"The RSSerpent Project is created by @queensferry , supported by various project members & contributors .","title":"People"},{"location":"faq/","text":"F.A.Q. \u00b6 Umm...Let's keep the list open for now!","title":"F.A.Q."},{"location":"faq/#faq","text":"Umm...Let's keep the list open for now!","title":"F.A.Q."},{"location":"outline/","text":"Outline \u00b6 This documentation is structured as follows: The [Usage] section teaches how to use RSSerpent for creating RSS feeds ; The [Deployment] section shows various approaches to self-hosting an RSSerpent instance ; The [Contribution] section lists options of contributing to the RSSerpent project ; The [Plugin] section contains a collection of official or community RSSerpent plugins . Wish you having fun playing with RSSerpent \ud83c\udf89","title":"Outline"},{"location":"outline/#outline","text":"This documentation is structured as follows: The [Usage] section teaches how to use RSSerpent for creating RSS feeds ; The [Deployment] section shows various approaches to self-hosting an RSSerpent instance ; The [Contribution] section lists options of contributing to the RSSerpent project ; The [Plugin] section contains a collection of official or community RSSerpent plugins . Wish you having fun playing with RSSerpent \ud83c\udf89","title":"Outline"},{"location":"contribution/","text":"Environment \u00b6 Whether you are contributing the RSSerpent core , or any of the official & community RSSerpent plugins , you need to follow this tutorial to set up a basic development environment. Python \u00b6 RSSerpent is written in the Python programming language. You must have a valid Python installation on your system in order to get RSSerpent up & run. The most universal way to install Python is to grab a installer from the official Python download page . An alternative approach is to install via a package manager: Linux macOS Windows # Arch sudo pacman -S python # Debian/Ubuntu sudo apt update sudo apt install python3 python3-pip # Homebrew brew install python # MacPorts sudo port selfupdate sudo port install python # Chocolatey choco install python # Scoop scoop install python Note If you need to manage multiple versions of Python on your system, checkout pyenv . Note If you are using Windows, you will need to set the environment variable PYTHONIOENCODING=utf8 . After successful installation, you need to run python -V (or python3 -V ) to verify the currently installed Python's version, as the default Python version provided by some package managers might not be compatible with RSSerpent. Please refer to the documentation of respective package manager to install a compatible Python version. Note Make sure you have git installed too. Poetry \u00b6 Poetry is a modern Python packaging and dependency management tool and is currently used by RSSerpent. Install poetry with: Unix Windows curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - ( Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing ) .Content | python - Further Steps \u00b6 If you are contributing to the RSSerpent core, or an existing RSSerpent plugin project, please refer to Core ; If you are starting a new RSSerpent plugin project, please refer to Plugin ; If you'd like to financially support the RSSerpent project, check out Open Collective or \u7231\u53d1\u7535 .","title":"Environment"},{"location":"contribution/#environment","text":"Whether you are contributing the RSSerpent core , or any of the official & community RSSerpent plugins , you need to follow this tutorial to set up a basic development environment.","title":"Environment"},{"location":"contribution/#python","text":"RSSerpent is written in the Python programming language. You must have a valid Python installation on your system in order to get RSSerpent up & run. The most universal way to install Python is to grab a installer from the official Python download page . An alternative approach is to install via a package manager: Linux macOS Windows # Arch sudo pacman -S python # Debian/Ubuntu sudo apt update sudo apt install python3 python3-pip # Homebrew brew install python # MacPorts sudo port selfupdate sudo port install python # Chocolatey choco install python # Scoop scoop install python Note If you need to manage multiple versions of Python on your system, checkout pyenv . Note If you are using Windows, you will need to set the environment variable PYTHONIOENCODING=utf8 . After successful installation, you need to run python -V (or python3 -V ) to verify the currently installed Python's version, as the default Python version provided by some package managers might not be compatible with RSSerpent. Please refer to the documentation of respective package manager to install a compatible Python version. Note Make sure you have git installed too.","title":"Python"},{"location":"contribution/#poetry","text":"Poetry is a modern Python packaging and dependency management tool and is currently used by RSSerpent. Install poetry with: Unix Windows curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - ( Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing ) .Content | python -","title":"Poetry"},{"location":"contribution/#further-steps","text":"If you are contributing to the RSSerpent core, or an existing RSSerpent plugin project, please refer to Core ; If you are starting a new RSSerpent plugin project, please refer to Plugin ; If you'd like to financially support the RSSerpent project, check out Open Collective or \u7231\u53d1\u7535 .","title":"Further Steps"},{"location":"contribution/core/","text":"Core \u00b6 Note Make sure you have read Environment before continuing. If you are contributing to the RSSerpent core (or any existing RSerpent plugin project), read this tutorial to understand the general workflow. Fork \u00b6 Take the RSSerpent core for example: On GitHub, navigate to the repository of the project you want to contribute. Click the Fork button on the top-right corner to create a replicate of the original repository owned by yourself. Note Read GitHub's document to further understand forks. Install \u00b6 Clone your forked repository locally. In your terminal, use cd to enter the directory and run: poetry install poetry run pre-commit install -t pre-commit -t commit-msg This will install project dependencies as well as pre-commit hooks. Depending on your network connection, it may take up to several minutes to install project dependencies. Note Read GitHub's document to further understand cloning. It's recommended to use an SSH key (instead of password) to connect to GitHub. Read GitHub's this document on how to configure SSH keys. Branch \u00b6 In you local repository, create a new branch by running git checkout -b <branch name> . Do all you work on this branch, instead of the master (or main ) branch. This will keep your fork free of conflict with the original repository. Generally we use a different branch for each pull request. Note It's a convention to name your branch feat/xxx if you are working on a new feature, or fix/xxx if you are trying to fix a bug. Pull Request \u00b6 After you commit changes locally, you need to push these commits to the remote GitHub repository. For the first push on any branch, run git push -u origin <branch name> ; after that you can just run git push for convenience. After pushing, open the browser, navigate to your forked repository. You will see a Pull request button above the list of files. Click that button to create a pull request, so that you could submit your work to the original repository. The maintainer of the original repository will then decide whether or not to accept your pull request. Note Read GitHub's document to further understand pull requests. Further Steps \u00b6 So far this tutorial is focused on discussing the general workflow of contributing to the RSSerpent core. If you are looking for some specific problem to work on, you may: Skim through the list of issues/discussions, find something you are interested in, claim the issue/discussion, and then submit a pull request. Find a bug, create an issue to report the bug, and then if you can, submit a pull request that will resolve this issue. Come up with an idea of some new feature, create a discussion thread to see if the maintainer will accept this feature, and then if you can and the maintainer will, submit a pull request implementing this new feature.","title":"Core"},{"location":"contribution/core/#core","text":"Note Make sure you have read Environment before continuing. If you are contributing to the RSSerpent core (or any existing RSerpent plugin project), read this tutorial to understand the general workflow.","title":"Core"},{"location":"contribution/core/#fork","text":"Take the RSSerpent core for example: On GitHub, navigate to the repository of the project you want to contribute. Click the Fork button on the top-right corner to create a replicate of the original repository owned by yourself. Note Read GitHub's document to further understand forks.","title":"Fork"},{"location":"contribution/core/#install","text":"Clone your forked repository locally. In your terminal, use cd to enter the directory and run: poetry install poetry run pre-commit install -t pre-commit -t commit-msg This will install project dependencies as well as pre-commit hooks. Depending on your network connection, it may take up to several minutes to install project dependencies. Note Read GitHub's document to further understand cloning. It's recommended to use an SSH key (instead of password) to connect to GitHub. Read GitHub's this document on how to configure SSH keys.","title":"Install"},{"location":"contribution/core/#branch","text":"In you local repository, create a new branch by running git checkout -b <branch name> . Do all you work on this branch, instead of the master (or main ) branch. This will keep your fork free of conflict with the original repository. Generally we use a different branch for each pull request. Note It's a convention to name your branch feat/xxx if you are working on a new feature, or fix/xxx if you are trying to fix a bug.","title":"Branch"},{"location":"contribution/core/#pull-request","text":"After you commit changes locally, you need to push these commits to the remote GitHub repository. For the first push on any branch, run git push -u origin <branch name> ; after that you can just run git push for convenience. After pushing, open the browser, navigate to your forked repository. You will see a Pull request button above the list of files. Click that button to create a pull request, so that you could submit your work to the original repository. The maintainer of the original repository will then decide whether or not to accept your pull request. Note Read GitHub's document to further understand pull requests.","title":"Pull Request"},{"location":"contribution/core/#further-steps","text":"So far this tutorial is focused on discussing the general workflow of contributing to the RSSerpent core. If you are looking for some specific problem to work on, you may: Skim through the list of issues/discussions, find something you are interested in, claim the issue/discussion, and then submit a pull request. Find a bug, create an issue to report the bug, and then if you can, submit a pull request that will resolve this issue. Come up with an idea of some new feature, create a discussion thread to see if the maintainer will accept this feature, and then if you can and the maintainer will, submit a pull request implementing this new feature.","title":"Further Steps"},{"location":"contribution/plugin/","text":"Create Plugins \u00b6 Note Make sure you have read Environment before continuing. Learn to create a RSSerpent plugin project from scratch through this tutorial. Scaffold \u00b6 You will need to install cookiecutter for quickly scaffolding an RSSerpent plugin, by using the official plugin template . pip install --user cookiecutter # or on macOS brew install cookiecutter # or on Debian/Ubuntu sudo apt install cookiecutter Now it's time to scaffold you project! In your terminal, start a new session and run: cookiecutter gh:rsserpent/template This will download the official RSSerpent plugin template from GitHub. You will then be prompted to fill in some information: plugin [rsserpent-plugin-xxx]: description [An rsserpent plugin for xxx.]: username [queensferryme]: link [https://github.com/queensferryme]: email [queensferryme@example.com]: The message between the brackets [...] are default values for respective fields, you may press Enter to accept or type in your own choice. You personal information ( email etc.) will only be used for rendering the template. You could always remain anonymous if you'd like to. After that, we'll automatically create a directory rsserpent-plugin-xxx/ with all the necessary project configurations for you. We will also install project dependencies (through poetry ) and pre-commit hooks, which may take minutes depending on your network connection. Develop \u00b6 You will need a IDE to start developing. We recommend using Visual Studio Code , or VSCode for short. Use VSCode to open the directory you just created using cookiecutter . You may be prompted to install some recommended VSCode plugins. An RSSerpent plugin is mostly a collection of routers , and each router is a path string accompanied by a data provider function. from typing import Any , Dict path = \"/path/to/route\" async def provider () -> Dict [ str , Any ]: return { \"title\" : \"Example\" , \"link\" : \"https://example.com\" , \"description\" : \"An example rsserpent plugin.\" , \"items\" : [{ \"title\" : \"Example Title\" , \"description\" : \"Example Description\" }], } Note See more example routers here . Warning The provider function must be async and can not have position-only arguments . The path variable defines an endpoint where users could access the RSS feed, and the provider function provides necessary data for rendering and serving the RSS feed to users. You will also need to register you routers in rsserpent_plugin_xxx/__init__.py : from . import route1 , route2 , route3 plugin = Plugin ( # ... routers = { route1 . path : route1 . provider , route2 . path : route2 . provider , route3 . path : route3 . provider , }, ) Note Poetry install dependencies inside a virtualenv . Therefore, in order to use tools like pre-commit , pytest or uvicorn , you will need to run poetry shell or source $(poetry env info -p)/bin/activate to activate the virtual environment. Run uvicorn --reload rsserpent:app in your terminal to start an RSSerpent instance locally, so that you can see if you plugin works as expected. \u279c uvicorn --reload rsserpent:app INFO: Will watch for changes in these directories: ['/path/to/your/directory'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [30920] using statreload INFO: Started server process [30922] INFO: Waiting for application startup. INFO: Application startup complete. Note We recommend plugin authors to write tests, so that the plugin can be more robust and have less bugs. Write your tests in the tests/ directory and run pytest to run the tests. Publish \u00b6 After you made enough changes to the plugin locally, make sure to commit your changes and push to GitHub. In this way, you can make you latest work available to plugin users. git add --all git commit -m \"<type>: <description>\" git push origin Note Commit messages should be in accordance with the Conventional Commits specification. When you run git commit , a set of pre-commit hooks will be triggered. Make sure you pass the checks before actually pushing to GitHub. You could also run the checks manually: \u279c pre-commit run --all-files Nitpick Check............................................................Passed Fix End of Files.........................................................Passed Trim Trailing Whitespace.................................................Passed Check Blanket \"#noqa\"....................................................Passed Check Blanket \"#type:ignore\".............................................Passed Upgrade Python Syntax....................................................Passed Check Typos..............................................................Passed Format Source Code.......................................................Passed Sort Imports.............................................................Passed Type Check...............................................................Passed Lint.....................................................................Passed Note In pre-commit hooks we run black , isort for source code formatting, mypy for type checking, and flake8 for linting. We also run nitpick , which contains a set of recommended configurations for black/isort/mypy/flake8 etc from the upstream. Warning If no pre-commit hooks are triggered (that's to say, you didn't see lines of checks marked with either Passed or Failed , as shown above) when you do git commit , you can manually install the pre-commit hooks with pre-commit install -t pre-commit -t commit-msg .","title":"Create Plugins"},{"location":"contribution/plugin/#create-plugins","text":"Note Make sure you have read Environment before continuing. Learn to create a RSSerpent plugin project from scratch through this tutorial.","title":"Create Plugins"},{"location":"contribution/plugin/#scaffold","text":"You will need to install cookiecutter for quickly scaffolding an RSSerpent plugin, by using the official plugin template . pip install --user cookiecutter # or on macOS brew install cookiecutter # or on Debian/Ubuntu sudo apt install cookiecutter Now it's time to scaffold you project! In your terminal, start a new session and run: cookiecutter gh:rsserpent/template This will download the official RSSerpent plugin template from GitHub. You will then be prompted to fill in some information: plugin [rsserpent-plugin-xxx]: description [An rsserpent plugin for xxx.]: username [queensferryme]: link [https://github.com/queensferryme]: email [queensferryme@example.com]: The message between the brackets [...] are default values for respective fields, you may press Enter to accept or type in your own choice. You personal information ( email etc.) will only be used for rendering the template. You could always remain anonymous if you'd like to. After that, we'll automatically create a directory rsserpent-plugin-xxx/ with all the necessary project configurations for you. We will also install project dependencies (through poetry ) and pre-commit hooks, which may take minutes depending on your network connection.","title":"Scaffold"},{"location":"contribution/plugin/#develop","text":"You will need a IDE to start developing. We recommend using Visual Studio Code , or VSCode for short. Use VSCode to open the directory you just created using cookiecutter . You may be prompted to install some recommended VSCode plugins. An RSSerpent plugin is mostly a collection of routers , and each router is a path string accompanied by a data provider function. from typing import Any , Dict path = \"/path/to/route\" async def provider () -> Dict [ str , Any ]: return { \"title\" : \"Example\" , \"link\" : \"https://example.com\" , \"description\" : \"An example rsserpent plugin.\" , \"items\" : [{ \"title\" : \"Example Title\" , \"description\" : \"Example Description\" }], } Note See more example routers here . Warning The provider function must be async and can not have position-only arguments . The path variable defines an endpoint where users could access the RSS feed, and the provider function provides necessary data for rendering and serving the RSS feed to users. You will also need to register you routers in rsserpent_plugin_xxx/__init__.py : from . import route1 , route2 , route3 plugin = Plugin ( # ... routers = { route1 . path : route1 . provider , route2 . path : route2 . provider , route3 . path : route3 . provider , }, ) Note Poetry install dependencies inside a virtualenv . Therefore, in order to use tools like pre-commit , pytest or uvicorn , you will need to run poetry shell or source $(poetry env info -p)/bin/activate to activate the virtual environment. Run uvicorn --reload rsserpent:app in your terminal to start an RSSerpent instance locally, so that you can see if you plugin works as expected. \u279c uvicorn --reload rsserpent:app INFO: Will watch for changes in these directories: ['/path/to/your/directory'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [30920] using statreload INFO: Started server process [30922] INFO: Waiting for application startup. INFO: Application startup complete. Note We recommend plugin authors to write tests, so that the plugin can be more robust and have less bugs. Write your tests in the tests/ directory and run pytest to run the tests.","title":"Develop"},{"location":"contribution/plugin/#publish","text":"After you made enough changes to the plugin locally, make sure to commit your changes and push to GitHub. In this way, you can make you latest work available to plugin users. git add --all git commit -m \"<type>: <description>\" git push origin Note Commit messages should be in accordance with the Conventional Commits specification. When you run git commit , a set of pre-commit hooks will be triggered. Make sure you pass the checks before actually pushing to GitHub. You could also run the checks manually: \u279c pre-commit run --all-files Nitpick Check............................................................Passed Fix End of Files.........................................................Passed Trim Trailing Whitespace.................................................Passed Check Blanket \"#noqa\"....................................................Passed Check Blanket \"#type:ignore\".............................................Passed Upgrade Python Syntax....................................................Passed Check Typos..............................................................Passed Format Source Code.......................................................Passed Sort Imports.............................................................Passed Type Check...............................................................Passed Lint.....................................................................Passed Note In pre-commit hooks we run black , isort for source code formatting, mypy for type checking, and flake8 for linting. We also run nitpick , which contains a set of recommended configurations for black/isort/mypy/flake8 etc from the upstream. Warning If no pre-commit hooks are triggered (that's to say, you didn't see lines of checks marked with either Passed or Failed , as shown above) when you do git commit , you can manually install the pre-commit hooks with pre-commit install -t pre-commit -t commit-msg .","title":"Publish"},{"location":"contribution/plugin/data/","text":"Retrieve Data \u00b6 When you are writing a data provider function, you need to retrieve data from a source website. RSSerpent ships with convenient utility functions for you to retrieve data in various scenarios. HTTP \u00b6 The most basic, bare-bone way to retrieve data from the Internet is by using the HTTP protocol. HTTPX , a powerful HTTP library for Python with asynchronous API, is bundled with the RSSerpent core. Sometimes the source website has a directly accessible JSON API, so you can simply: from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) data = response . json () Here, rsserpent.utils.HTTPClient is a subclass of httpx.AsyncClient , despite that HTTPClient will automatically set Host , Referer , and User-Agent headers for you. HTML \u00b6 The source website is sometimes not kind enough to offer you convenient JSON API, so you have to parse the HTML in order to retrieve data. PyQuery is here to help -- it lets you retrieve data from HTML documents by using a jQuery-like API, and it is also bundled with RSSerpent! from pyquery import PyQuery from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) dom = PyQuery ( response . text ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () Browser Emulation \u00b6 In worse situations, HTTP is simply not enough. Many modern websites are loaded with JavaScript, and the true content of the website won't be rendered unless you are running in a genuine browser environment with a JavaScript engine. In this case, you need a browser emulator. Playwright is a powerful browser automation library and it's bundled with RSSerpent. RSSerpent also provides a convenient wrapper on top of playwright: from pyquery import PyQuery from rsserpent.utils import Browser async with Browser () as browser : await browser . goto ( \"https://httpbin.org/html\" ) content = await browser . content () dom = PyQuery ( content ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () Warning Browser emulation's power comes with a cost, as it strains CPU & memory resources. Be cautious! Use browser emulation only when necessary.","title":"Retrieve Data"},{"location":"contribution/plugin/data/#retrieve-data","text":"When you are writing a data provider function, you need to retrieve data from a source website. RSSerpent ships with convenient utility functions for you to retrieve data in various scenarios.","title":"Retrieve Data"},{"location":"contribution/plugin/data/#http","text":"The most basic, bare-bone way to retrieve data from the Internet is by using the HTTP protocol. HTTPX , a powerful HTTP library for Python with asynchronous API, is bundled with the RSSerpent core. Sometimes the source website has a directly accessible JSON API, so you can simply: from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) data = response . json () Here, rsserpent.utils.HTTPClient is a subclass of httpx.AsyncClient , despite that HTTPClient will automatically set Host , Referer , and User-Agent headers for you.","title":"HTTP"},{"location":"contribution/plugin/data/#html","text":"The source website is sometimes not kind enough to offer you convenient JSON API, so you have to parse the HTML in order to retrieve data. PyQuery is here to help -- it lets you retrieve data from HTML documents by using a jQuery-like API, and it is also bundled with RSSerpent! from pyquery import PyQuery from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) dom = PyQuery ( response . text ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text ()","title":"HTML"},{"location":"contribution/plugin/data/#browser-emulation","text":"In worse situations, HTTP is simply not enough. Many modern websites are loaded with JavaScript, and the true content of the website won't be rendered unless you are running in a genuine browser environment with a JavaScript engine. In this case, you need a browser emulator. Playwright is a powerful browser automation library and it's bundled with RSSerpent. RSSerpent also provides a convenient wrapper on top of playwright: from pyquery import PyQuery from rsserpent.utils import Browser async with Browser () as browser : await browser . goto ( \"https://httpbin.org/html\" ) content = await browser . content () dom = PyQuery ( content ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () Warning Browser emulation's power comes with a cost, as it strains CPU & memory resources. Be cautious! Use browser emulation only when necessary.","title":"Browser Emulation"},{"location":"deployment/","text":"Self-Hosting \u00b6 You are encouraged to self-host an RSSerpent instance. Note An instance is a running copy of the RSSerpent software. Self-hosting is neither difficult nor complicated. You are not required to have any relevant experience in computer programming to achieve this job. Here are some easy-to-follow tutorials on self-hosting an RSSerpent instance: [Deploy with Deta] [Deploy with Heroku] [Deploy with Vercel] Official Instances \u00b6 RSSerpent has hosted some official instances. If you believe self-hosting is not a viable option for you, consider using one of the follows: https://www.rsserpent.com , hosted on vercel.com [ source ]; https://rsserpent.deta.dev , hosted on deta.sh [ source ]; https://rsserpent.herokuapp.com , hosted on heroku.com [ source ];","title":"Self-Hosting"},{"location":"deployment/#self-hosting","text":"You are encouraged to self-host an RSSerpent instance. Note An instance is a running copy of the RSSerpent software. Self-hosting is neither difficult nor complicated. You are not required to have any relevant experience in computer programming to achieve this job. Here are some easy-to-follow tutorials on self-hosting an RSSerpent instance: [Deploy with Deta] [Deploy with Heroku] [Deploy with Vercel]","title":"Self-Hosting"},{"location":"deployment/#official-instances","text":"RSSerpent has hosted some official instances. If you believe self-hosting is not a viable option for you, consider using one of the follows: https://www.rsserpent.com , hosted on vercel.com [ source ]; https://rsserpent.deta.dev , hosted on deta.sh [ source ]; https://rsserpent.herokuapp.com , hosted on heroku.com [ source ];","title":"Official Instances"},{"location":"deployment/deta/","text":"Deploy with Deta \u00b6 Learn to self-host an RSSerpent instance on Deta (for free ) through this tutorial. Access Token \u00b6 In order to deploy on Deta, you need to create an account at https://web.deta.sh first. After successful registration & sign-in, you will need to create an access token so that RSSerpent could help you do the rest! Go to your home page https://web.deta.sh/home/{username}/ ; Click the Settings tab, then click the Create Token button; Copy the generated access token to your clipboard. Read Deta's document if you have any question/concern about the access token. Use the Template \u00b6 RSSerpent provides a Deta deployment template. You will need an GitHub account before continuing. Go to the template on GitHub; Click the button. You will be prompted to create a repository based on the template. After successful creation: Go to your repository's Settings tab; Go to the Secrets section, click the New repository secret button; Create a secret whose name is DETA_TOKEN and whose value is the Deta access token you just created. GitHub will need the access token so that it could automatically deploy your RSSerpent instance on Deta. Running \ud83c\udf89 \u00b6 In your repository's Actions tab, locate the Update workflow, click the Run workflow button to manually trigger the first deployment; Go to your deta.sh home page, under the default project's Micros list, select rsserpent , you will see the URL of your instance (usually https://xxxxxx.deta.dev/ ) at the top-right corner. Open that URL in your browser. If you see the \" Welcome to RSSerpent! \" message, congratulations, you are good to go! Miscellany \u00b6 If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Deta's document .","title":"Deploy with Deta"},{"location":"deployment/deta/#deploy-with-deta","text":"Learn to self-host an RSSerpent instance on Deta (for free ) through this tutorial.","title":"Deploy with Deta"},{"location":"deployment/deta/#access-token","text":"In order to deploy on Deta, you need to create an account at https://web.deta.sh first. After successful registration & sign-in, you will need to create an access token so that RSSerpent could help you do the rest! Go to your home page https://web.deta.sh/home/{username}/ ; Click the Settings tab, then click the Create Token button; Copy the generated access token to your clipboard. Read Deta's document if you have any question/concern about the access token.","title":"Access Token"},{"location":"deployment/deta/#use-the-template","text":"RSSerpent provides a Deta deployment template. You will need an GitHub account before continuing. Go to the template on GitHub; Click the button. You will be prompted to create a repository based on the template. After successful creation: Go to your repository's Settings tab; Go to the Secrets section, click the New repository secret button; Create a secret whose name is DETA_TOKEN and whose value is the Deta access token you just created. GitHub will need the access token so that it could automatically deploy your RSSerpent instance on Deta.","title":"Use the Template"},{"location":"deployment/deta/#running-","text":"In your repository's Actions tab, locate the Update workflow, click the Run workflow button to manually trigger the first deployment; Go to your deta.sh home page, under the default project's Micros list, select rsserpent , you will see the URL of your instance (usually https://xxxxxx.deta.dev/ ) at the top-right corner. Open that URL in your browser. If you see the \" Welcome to RSSerpent! \" message, congratulations, you are good to go!","title":"Running \ud83c\udf89"},{"location":"deployment/deta/#miscellany","text":"If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Deta's document .","title":"Miscellany"},{"location":"deployment/heroku/","text":"Deploy with Heroku \u00b6 Deploying an RSSerpent instance on Heroku is easy & free! You will need a GitHub and a Heroku account before proceeding. Use the Template \u00b6 Go to the RSSerpent Heroku deployment template , then click the button. You will be prompted to create a repository based on the template. Running \ud83c\udf89 \u00b6 After successful creation, in your generated repository, click the button. You will be redirected to Heroku and then be prompted to fill in you Heroku app name. Wait for minutes and your RSSerpent instance will be up & running! After successful deployment, you can open you RSSerpent instance in the browser by clicking the Open app button at the right top corner of the page. If you see the \" Welcome to RSSerpent! \" message, congratulations, you are good to go! Miscellany \u00b6 If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Heroku's document .","title":"Deploy with Heroku"},{"location":"deployment/heroku/#deploy-with-heroku","text":"Deploying an RSSerpent instance on Heroku is easy & free! You will need a GitHub and a Heroku account before proceeding.","title":"Deploy with Heroku"},{"location":"deployment/heroku/#use-the-template","text":"Go to the RSSerpent Heroku deployment template , then click the button. You will be prompted to create a repository based on the template.","title":"Use the Template"},{"location":"deployment/heroku/#running-","text":"After successful creation, in your generated repository, click the button. You will be redirected to Heroku and then be prompted to fill in you Heroku app name. Wait for minutes and your RSSerpent instance will be up & running! After successful deployment, you can open you RSSerpent instance in the browser by clicking the Open app button at the right top corner of the page. If you see the \" Welcome to RSSerpent! \" message, congratulations, you are good to go!","title":"Running \ud83c\udf89"},{"location":"deployment/heroku/#miscellany","text":"If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Heroku's document .","title":"Miscellany"},{"location":"deployment/plugin/","text":"Install Plugins \u00b6 Warning Be careful not to mistake rsserpent.txt for requirements.txt . The default template doesn't do much. In order to unleash the full power of RSSerpent, you will need to add RSSerpent plugins to the rsserpent.txt file. You could clone the repository to edit rsserpent.txt locally, or you could just use the GitHub web interface if you are not familiar with git . Several things to note when writing rsserpent.txt : It's the same as writing requirements.txt for any Python project; Do not modify requirements.txt , only edit rsserpent.txt . GitHub Actions will be in charge of automatically updating requirements.txt and deploying your instance; By automatically it means every week or every time you commit changes to the repository; It's recommended to not specify versions so that GitHub Actions could automatically updates them; # PyPI rsserpent # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git If you do need a specific version of some dependency, you could always pin its version with: # PyPI rsserpent == 0.1.4 # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git @ 0609 c0bd466e5d19fbb13078d9b93e0134b8c5bd","title":"Install Plugins"},{"location":"deployment/plugin/#install-plugins","text":"Warning Be careful not to mistake rsserpent.txt for requirements.txt . The default template doesn't do much. In order to unleash the full power of RSSerpent, you will need to add RSSerpent plugins to the rsserpent.txt file. You could clone the repository to edit rsserpent.txt locally, or you could just use the GitHub web interface if you are not familiar with git . Several things to note when writing rsserpent.txt : It's the same as writing requirements.txt for any Python project; Do not modify requirements.txt , only edit rsserpent.txt . GitHub Actions will be in charge of automatically updating requirements.txt and deploying your instance; By automatically it means every week or every time you commit changes to the repository; It's recommended to not specify versions so that GitHub Actions could automatically updates them; # PyPI rsserpent # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git If you do need a specific version of some dependency, you could always pin its version with: # PyPI rsserpent == 0.1.4 # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git @ 0609 c0bd466e5d19fbb13078d9b93e0134b8c5bd","title":"Install Plugins"},{"location":"deployment/vercel/","text":"Deploy with Vercel \u00b6 Learn to self-host an RSSerpent instance on Vercel (for free ) through this tutorial. Use the Template \u00b6 Go to the RSSerpent Vercel deployment template , then click the button. You will be prompted to create a repository based on the template. Deploy the Project \u00b6 Open this link in your browser, click Continue with GitHub . Vercel will instruct you to authenticate with your GitHub account. After successful login, Vercel will ask you to import a GitHub repository to deploy. You will need to find the rsserpent-deploy-vercel repository that you just created, and then click the button to its right. Now, Vercel will ask you to configure the project. The good news is you don't have to! Just click the Deploy button, wait for several minutes, and your RSSerpent instance will be online. Running \ud83c\udf89 \u00b6 If your interface now looks like this, congratulations, you are good to go! You can access your RSSerpent instance from the browser by clicking the website thumbnail in the center. Miscellany \u00b6 If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Vercel's document .","title":"Deploy with Vercel"},{"location":"deployment/vercel/#deploy-with-vercel","text":"Learn to self-host an RSSerpent instance on Vercel (for free ) through this tutorial.","title":"Deploy with Vercel"},{"location":"deployment/vercel/#use-the-template","text":"Go to the RSSerpent Vercel deployment template , then click the button. You will be prompted to create a repository based on the template.","title":"Use the Template"},{"location":"deployment/vercel/#deploy-the-project","text":"Open this link in your browser, click Continue with GitHub . Vercel will instruct you to authenticate with your GitHub account. After successful login, Vercel will ask you to import a GitHub repository to deploy. You will need to find the rsserpent-deploy-vercel repository that you just created, and then click the button to its right. Now, Vercel will ask you to configure the project. The good news is you don't have to! Just click the Deploy button, wait for several minutes, and your RSSerpent instance will be online.","title":"Deploy the Project"},{"location":"deployment/vercel/#running-","text":"If your interface now looks like this, congratulations, you are good to go! You can access your RSSerpent instance from the browser by clicking the website thumbnail in the center.","title":"Running \ud83c\udf89"},{"location":"deployment/vercel/#miscellany","text":"If you wish to add RSSerpent plugins, read [Install Plugins] . If you need a custom domain, read Vercel's document .","title":"Miscellany"},{"location":"plugin/","text":"Official \u00b6","title":"Official"},{"location":"plugin/#official","text":"","title":"Official"},{"location":"usage/","text":"Know about RSS \u00b6 Note Before learning to use RSSerpent, you should have a basic understanding of RSS itself. Proceed to the next chapter if you already understood. What is RSS? \u00b6 RSS , short for Really Simple Syndication, is a web feed format. Other common web feed formats include Atom , JSON Feed , etc. As the oldest and most popular web feed format, RSS is also often used as the collective name of RSS, Atom, and other web feed formats. As a web feed format, RSS is capable of pushing some frequently updated content to end-users over the Internet. One typical application of RSS is in the news industry. To this day, many news publishers, including BBC News, The Guardian, etc, still provide RSS news subscriptions. Why use RSS? \u00b6 RSS is most convenient for content readers. By subscribing to RSS feeds, you could aggregate information from various sources into one united place, thus eliminating the need to open multiple tabs/applications to skim through. What's even better, you can filter and prioritize based on the then aggregated information, in order to retrieve the most valuable pieces and save your precious reading time. Many RSS feeds also provide full-text output (instead of abstraction), so that you don't even have to open the browser to read the article. You will be free of cookie tracking, and your privacy will be preserved. However, RSS is not as friendly to content publishers. Because RSS does not require you to open a browser or accept tedious cookie policies, it will be increasingly difficult for content publishers to profit from advertisement and personal data. As a result, fewer and fewer content publishers provide RSS subscriptions nowadays. RSSerpent would like to change this situation, so that content readers can benefit from more independent, convenient, and free access to the information on the Internet. How to use RSS? \u00b6 Usually, you subscribe to an RSS feed with a link (URL). RSS subscription links, by default, generate data in formats (e.g. XML, JSON) that are easier for computers to process and exchange. Therefore, we will also need an RSS reader to convert the RSS feed format into a more human-readable format. Taking the RSS subscription link of The Guardian's World News as an example: By opening that subscription link in the browser, you are likely to be confronted with this incomprehensible document. Don't panic! You are not mandated to understand anything about computer programming in order to learn about how to use RSS \ud83d\ude09 The only thing you will need to know is the link in the browser's address bar. Copy that subscription link to your clipboard, open your RSS reader, paste that link, and you will successfully subscribe to the RSS feed. There are plenty of RSS readers available out there. You can find many of them simply through the search engine. The All about RSS repository also exhibits a fine collection of popular RSS readers for your reference. Here is a list of options recommended by the RSSerpent document: #General Feedly \uff0c Inoreader #Apple NetNewsWire \uff0c Reeder #Android FeedMe Note RSSerpent itself is not an RSS reader. RSSerpent is used for creating RSS feeds.","title":"Know about RSS"},{"location":"usage/#know-about-rss","text":"Note Before learning to use RSSerpent, you should have a basic understanding of RSS itself. Proceed to the next chapter if you already understood.","title":"Know about RSS"},{"location":"usage/#what-is-rss","text":"RSS , short for Really Simple Syndication, is a web feed format. Other common web feed formats include Atom , JSON Feed , etc. As the oldest and most popular web feed format, RSS is also often used as the collective name of RSS, Atom, and other web feed formats. As a web feed format, RSS is capable of pushing some frequently updated content to end-users over the Internet. One typical application of RSS is in the news industry. To this day, many news publishers, including BBC News, The Guardian, etc, still provide RSS news subscriptions.","title":"What is RSS?"},{"location":"usage/#why-use-rss","text":"RSS is most convenient for content readers. By subscribing to RSS feeds, you could aggregate information from various sources into one united place, thus eliminating the need to open multiple tabs/applications to skim through. What's even better, you can filter and prioritize based on the then aggregated information, in order to retrieve the most valuable pieces and save your precious reading time. Many RSS feeds also provide full-text output (instead of abstraction), so that you don't even have to open the browser to read the article. You will be free of cookie tracking, and your privacy will be preserved. However, RSS is not as friendly to content publishers. Because RSS does not require you to open a browser or accept tedious cookie policies, it will be increasingly difficult for content publishers to profit from advertisement and personal data. As a result, fewer and fewer content publishers provide RSS subscriptions nowadays. RSSerpent would like to change this situation, so that content readers can benefit from more independent, convenient, and free access to the information on the Internet.","title":"Why use RSS?"},{"location":"usage/#how-to-use-rss","text":"Usually, you subscribe to an RSS feed with a link (URL). RSS subscription links, by default, generate data in formats (e.g. XML, JSON) that are easier for computers to process and exchange. Therefore, we will also need an RSS reader to convert the RSS feed format into a more human-readable format. Taking the RSS subscription link of The Guardian's World News as an example: By opening that subscription link in the browser, you are likely to be confronted with this incomprehensible document. Don't panic! You are not mandated to understand anything about computer programming in order to learn about how to use RSS \ud83d\ude09 The only thing you will need to know is the link in the browser's address bar. Copy that subscription link to your clipboard, open your RSS reader, paste that link, and you will successfully subscribe to the RSS feed. There are plenty of RSS readers available out there. You can find many of them simply through the search engine. The All about RSS repository also exhibits a fine collection of popular RSS readers for your reference. Here is a list of options recommended by the RSSerpent document: #General Feedly \uff0c Inoreader #Apple NetNewsWire \uff0c Reeder #Android FeedMe Note RSSerpent itself is not an RSS reader. RSSerpent is used for creating RSS feeds.","title":"How to use RSS?"},{"location":"usage/router/","text":"Routers \u00b6 Under normal circumstances, every RSS feed has a subscription link. For example, the subscription link of The Guardian World News' feed is www.theguardian.com/world/rss . In this subscription link, the part before the first slash / is called the domain ( www.theguardian.com ), and the other part is called the route ( /world/rss ). You can conceive of a subscription link as a virtual pathway, of which the domain is an approximate address while the route is the specific unit/room, etc. The subscription link leads you towards resources you need on the Internet. Note The definition of a subscription link here does not necessarily comply with the URL standard. There are simplifications so that readers from a non-tech background can understand more easily. Instances and Routes \u00b6 If you wish to subscribe to news sources without RSS through RSSerpent, you will need to find the subscription link, as usual. RSSerpent's subscription links, similarly, consist of a domain and a route: Every domain corresponds to an RSSerpent instance. For example, the official domain www.rsserpent.com corresponds to the official instance. You can find more official instances to use on the [Deploy] page, but we recommend self-hosting to accommodate your growing and varied requirements. By default, an RSSerpent instance contains no route. Maintainers of instances will need to [Install Plugins] to import routes. If you found a plugin/route missing while using an RSSerpent hosted by others, you can appeal to the instance maintainer or, as recommended, self-host an instance on your own. Note An instance is a running copy of the RSSerpent software. Note Every RSSerpent plugin contains one or more routes. RSSerpent's official instance comes with the Bilibili plugin . Therefore, you can access the /bilibili/user/{id}/video route on the official instance to subscribe to some users' published videos. For example, if you wish to subscribe to Chubbyemu 's official Chinese translation channel on Bilibili, you could concatenate the official domain www.rsserpent.com and the route /bilibili/user/297786973/video to generate the subscription link as follows: Route Parameters \u00b6 Warning Any example under this warning is provided \"as is\" and does not necessarily work with any instances. From the example given above, we note that some routes are not complete, and require your information input. Assuming this route can help you subscribe to some users' published videos, the route will need to know which users you'd like to subscribe to to work as expected. These information inputs are called route parameters . Route parameters are usually surrounded by brackets {} . When filling the route parameters, you should remove the bracket pair. Different routes are provided by different plugins, and you should refer to the documentation of the respective plugin to understand the implication of each route parameter and how you can find and fill in these route parameters. Again, taking the /bilibili/user/{id}/video route for example: the route accepts one route parameter id . Every Bilibili user is endowed with a unique ID, which you usually can find in the user profile's address. Only with this unique identifier, the route will then be able to retrieve the user's list of published videos, and output the list in the RSS feed subscription link. Query Parameters \u00b6 Route parameters are required. However, sometimes routes need to access optional or conditional parameters -- we call such parameters query parameters : Query parameters should be placed after the route, and guarded by a question mark ? ; There can be arbitrary amount of query parameters, each looking like {name}={value} ; Multiple query parameters are separated with an ampersand & . For example, assuming the /bilibili/user/{id}/video route accepts two query parameters, of which the sort parameter is used to specify the sorting criteria while the order parameter is used to indicate ascent/descent. Given that most users would probably subscribe to the latest videos, the route by default will sort the list of videos in chronologically descending order. However, if you need to subscribe to the most trending videos, the route should look like /bilibili/user/{id}/video?sort=hot&order=desc .","title":"Routers"},{"location":"usage/router/#routers","text":"Under normal circumstances, every RSS feed has a subscription link. For example, the subscription link of The Guardian World News' feed is www.theguardian.com/world/rss . In this subscription link, the part before the first slash / is called the domain ( www.theguardian.com ), and the other part is called the route ( /world/rss ). You can conceive of a subscription link as a virtual pathway, of which the domain is an approximate address while the route is the specific unit/room, etc. The subscription link leads you towards resources you need on the Internet. Note The definition of a subscription link here does not necessarily comply with the URL standard. There are simplifications so that readers from a non-tech background can understand more easily.","title":"Routers"},{"location":"usage/router/#instances-and-routes","text":"If you wish to subscribe to news sources without RSS through RSSerpent, you will need to find the subscription link, as usual. RSSerpent's subscription links, similarly, consist of a domain and a route: Every domain corresponds to an RSSerpent instance. For example, the official domain www.rsserpent.com corresponds to the official instance. You can find more official instances to use on the [Deploy] page, but we recommend self-hosting to accommodate your growing and varied requirements. By default, an RSSerpent instance contains no route. Maintainers of instances will need to [Install Plugins] to import routes. If you found a plugin/route missing while using an RSSerpent hosted by others, you can appeal to the instance maintainer or, as recommended, self-host an instance on your own. Note An instance is a running copy of the RSSerpent software. Note Every RSSerpent plugin contains one or more routes. RSSerpent's official instance comes with the Bilibili plugin . Therefore, you can access the /bilibili/user/{id}/video route on the official instance to subscribe to some users' published videos. For example, if you wish to subscribe to Chubbyemu 's official Chinese translation channel on Bilibili, you could concatenate the official domain www.rsserpent.com and the route /bilibili/user/297786973/video to generate the subscription link as follows:","title":"Instances and Routes"},{"location":"usage/router/#route-parameters","text":"Warning Any example under this warning is provided \"as is\" and does not necessarily work with any instances. From the example given above, we note that some routes are not complete, and require your information input. Assuming this route can help you subscribe to some users' published videos, the route will need to know which users you'd like to subscribe to to work as expected. These information inputs are called route parameters . Route parameters are usually surrounded by brackets {} . When filling the route parameters, you should remove the bracket pair. Different routes are provided by different plugins, and you should refer to the documentation of the respective plugin to understand the implication of each route parameter and how you can find and fill in these route parameters. Again, taking the /bilibili/user/{id}/video route for example: the route accepts one route parameter id . Every Bilibili user is endowed with a unique ID, which you usually can find in the user profile's address. Only with this unique identifier, the route will then be able to retrieve the user's list of published videos, and output the list in the RSS feed subscription link.","title":"Route Parameters"},{"location":"usage/router/#query-parameters","text":"Route parameters are required. However, sometimes routes need to access optional or conditional parameters -- we call such parameters query parameters : Query parameters should be placed after the route, and guarded by a question mark ? ; There can be arbitrary amount of query parameters, each looking like {name}={value} ; Multiple query parameters are separated with an ampersand & . For example, assuming the /bilibili/user/{id}/video route accepts two query parameters, of which the sort parameter is used to specify the sorting criteria while the order parameter is used to indicate ascent/descent. Given that most users would probably subscribe to the latest videos, the route by default will sort the list of videos in chronologically descending order. However, if you need to subscribe to the most trending videos, the route should look like /bilibili/user/{id}/video?sort=hot&order=desc .","title":"Query Parameters"},{"location":"zh/","text":"\u4ecb\u7ecd \u00b6 RSSerpent \u662f\u4e00\u4e2a\u5f00\u6e90\u8f6f\u4ef6\u3002\u5b83\u80fd\u5e2e\u52a9\u4f60\u4f7f\u7528 RSS \u8ba2\u9605\u90a3\u4e9b\u4e0d\u652f\u6301 RSS \u8ba2\u9605\u7684\u7f51\u7ad9\u3002 \u5feb\u901f\u5f00\u59cb \u00b6 \u793a\u4f8b\uff1a https://www.rsserpent.com/ \u6587\u6863\uff1a https://docs.rsserpent.com/ \u81f4\u8c22 \u00b6 RSSerpent \u9879\u76ee\u662f\u5728 RSSHub \u7684\u542f\u53d1\u4e0b\u5f00\u53d1\u7684 \ud83c\udf89 \u6211\u4eec\u5411 RSSHub \u9879\u76ee\u53ca\u5176\u7ef4\u62a4\u8005\u81f4\u4ee5\u656c\u610f\u3002 \u8d5e\u52a9\u5546 \u00b6 \u6210\u5458 \u00b6 RSSerpent \u9879\u76ee\u7684\u521b\u5efa\u8005\u662f @queensferry \uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u70ed\u5fc3\u7684 \u9879\u76ee\u6210\u5458 \u548c \u8d21\u732e\u8005 \u652f\u6491\u7740\u8fd9\u4e2a\u9879\u76ee\u3002","title":"\u4ecb\u7ecd"},{"location":"zh/#\u4ecb\u7ecd","text":"RSSerpent \u662f\u4e00\u4e2a\u5f00\u6e90\u8f6f\u4ef6\u3002\u5b83\u80fd\u5e2e\u52a9\u4f60\u4f7f\u7528 RSS \u8ba2\u9605\u90a3\u4e9b\u4e0d\u652f\u6301 RSS \u8ba2\u9605\u7684\u7f51\u7ad9\u3002","title":"\u4ecb\u7ecd"},{"location":"zh/#\u5feb\u901f\u5f00\u59cb","text":"\u793a\u4f8b\uff1a https://www.rsserpent.com/ \u6587\u6863\uff1a https://docs.rsserpent.com/","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"zh/#\u81f4\u8c22","text":"RSSerpent \u9879\u76ee\u662f\u5728 RSSHub \u7684\u542f\u53d1\u4e0b\u5f00\u53d1\u7684 \ud83c\udf89 \u6211\u4eec\u5411 RSSHub \u9879\u76ee\u53ca\u5176\u7ef4\u62a4\u8005\u81f4\u4ee5\u656c\u610f\u3002","title":"\u81f4\u8c22"},{"location":"zh/#\u8d5e\u52a9\u5546","text":"","title":"\u8d5e\u52a9\u5546"},{"location":"zh/#\u6210\u5458","text":"RSSerpent \u9879\u76ee\u7684\u521b\u5efa\u8005\u662f @queensferry \uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u70ed\u5fc3\u7684 \u9879\u76ee\u6210\u5458 \u548c \u8d21\u732e\u8005 \u652f\u6491\u7740\u8fd9\u4e2a\u9879\u76ee\u3002","title":"\u6210\u5458"},{"location":"zh/faq/","text":"\u5e38\u89c1\u95ee\u9898 \u00b6 \u55ef\u2026\u76ee\u524d\u8fd8\u6ca1\u4ec0\u4e48\u95ee\u9898\uff01","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"zh/faq/#\u5e38\u89c1\u95ee\u9898","text":"\u55ef\u2026\u76ee\u524d\u8fd8\u6ca1\u4ec0\u4e48\u95ee\u9898\uff01","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"zh/outline/","text":"\u6587\u6863\u7ed3\u6784 \u00b6 \u672c\u6587\u6863\u6574\u4f53\u7ec4\u7ec7\u7ed3\u6784\u5982\u4e0b\uff1a [\u4f7f\u7528] \u6a21\u5757\u5c06\u6307\u5bfc\u4f60 \u4f7f\u7528 RSSerpent \u6765\u521b\u5efa RSS \u8ba2\u9605\u94fe\u63a5 \uff1b [\u90e8\u7f72] \u6a21\u5757\u5c55\u793a\u4e86 \u591a\u79cd\u81ea\u5efa RSSerpent \u7684\u65b9\u6cd5 ; [\u8d21\u732e] \u6a21\u5757\u8bf4\u660e\u4e86 \u5982\u4f55\u4e3a RSSerpent \u9879\u76ee\u4f5c\u51fa\u8d21\u732e ; [\u63d2\u4ef6] \u6a21\u5757\u6c47\u603b\u4e86 \u6240\u6709\u5df2\u77e5\u7684\u5b98\u65b9\u6216\u793e\u533a RSSerpent \u63d2\u4ef6 \u3002 \u795d\u4f60\u5728\u4f7f\u7528 RSSerpent \u65f6\u73a9\u5f97\u5f00\u5fc3 \ud83c\udf89","title":"\u6587\u6863\u7ed3\u6784"},{"location":"zh/outline/#\u6587\u6863\u7ed3\u6784","text":"\u672c\u6587\u6863\u6574\u4f53\u7ec4\u7ec7\u7ed3\u6784\u5982\u4e0b\uff1a [\u4f7f\u7528] \u6a21\u5757\u5c06\u6307\u5bfc\u4f60 \u4f7f\u7528 RSSerpent \u6765\u521b\u5efa RSS \u8ba2\u9605\u94fe\u63a5 \uff1b [\u90e8\u7f72] \u6a21\u5757\u5c55\u793a\u4e86 \u591a\u79cd\u81ea\u5efa RSSerpent \u7684\u65b9\u6cd5 ; [\u8d21\u732e] \u6a21\u5757\u8bf4\u660e\u4e86 \u5982\u4f55\u4e3a RSSerpent \u9879\u76ee\u4f5c\u51fa\u8d21\u732e ; [\u63d2\u4ef6] \u6a21\u5757\u6c47\u603b\u4e86 \u6240\u6709\u5df2\u77e5\u7684\u5b98\u65b9\u6216\u793e\u533a RSSerpent \u63d2\u4ef6 \u3002 \u795d\u4f60\u5728\u4f7f\u7528 RSSerpent \u65f6\u73a9\u5f97\u5f00\u5fc3 \ud83c\udf89","title":"\u6587\u6863\u7ed3\u6784"},{"location":"zh/contribution/","text":"\u73af\u5883 \u00b6 \u65e0\u8bba\u4f60\u662f\u60f3\u5411 RSSerpent \u6838\u5fc3 \u3001\u6216\u662f\u4efb\u4e00 RSSerpent \u5b98\u65b9/\u793e\u533a \u63d2\u4ef6 \u505a\u8d21\u732e\uff0c\u4f60\u90fd\u9700\u8981\u9605\u8bfb\u5e76\u4f9d\u4ece\u672c\u6587\u6863\u7684\u6307\u793a\uff0c\u6765\u642d\u5efa\u4e00\u4e2a\u5f00\u53d1\u73af\u5883\u3002 Python \u00b6 RSSerpent \u4f7f\u7528 Python \u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u5728\u4f60\u7684\u7cfb\u7edf\u4e0a\u5b89\u88c5 Python \u624d\u80fd\u8fd0\u884c RSSerpent\u3002\u6700\u901a\u7528\u7684 Python \u5b89\u88c5\u65b9\u5f0f\u5c31\u662f\u5230 Python \u5b98\u65b9 \u4e0b\u8f7d\u9875\u9762 \u53bb\u4e0b\u8f7d\u4e00\u4e2a\u5b89\u88c5\u5305\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u6765\u5b89\u88c5\uff1a Linux macOS Windows # Arch sudo pacman -S python # Debian/Ubuntu sudo apt update sudo apt install python3 python3-pip # Homebrew brew install python # MacPorts sudo port selfupdate sudo port install python # Chocolatey choco install python # Scoop scoop install python Note \u5982\u679c\u4f60\u9700\u8981\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u591a\u4e2a Python \u7248\u672c\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 pyenv \u3002 Note \u5982\u679c\u4f60\u4f7f\u7528 Windows \u7cfb\u7edf\uff0c\u4f60\u8fd8\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONIOENCODING=utf8 \u3002 \u6210\u529f\u5b89\u88c5\u4ee5\u540e\uff0c\u4f60\u9700\u8981\u8fd0\u884c python -V \uff08\u6216\u8005 python3 -V \uff09\u6765\u786e\u8ba4 Python \u7684\u7248\u672c\u3002\u8fd9\u662f\u56e0\u4e3a\u6709\u4e9b\u5305\u7ba1\u7406\u5668\u9ed8\u8ba4\u5b89\u88c5\u7684 Python \u7248\u672c\u4e0d\u4e00\u5b9a\u53d7 RSSerpent \u652f\u6301\u3002\u5982\u9047\u6b64\u79cd\u60c5\u51b5\uff0c\u8bf7\u53c2\u8003\u5305\u7ba1\u7406\u5668\u7684\u76f8\u5173\u6587\u6863\u6765\u5b89\u88c5\u53d7 RSSerpent \u652f\u6301\u7684 Python \u7248\u672c\u3002 Note \u8bf7\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e0a\u4e5f\u5b89\u88c5\u4e86 git \u3002 Poetry \u00b6 Poetry \u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684 Python \u6253\u5305\u548c\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0cRSSerpent \u76ee\u524d\u4f7f\u7528 Poetry \u6765\u7ba1\u7406\u9879\u76ee\u4f9d\u8d56\u3002\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5 Poetry\uff1a Unix Windows curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - ( Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing ) .Content | python - \u63a5\u4e0b\u6765\u2026 \u00b6 \u5982\u679c\u4f60\u60f3\u8981\u5411 RSSerpent \u6838\u5fc3\u3001\u6216\u8005\u4efb\u4e00\u5df2\u6709\u7684 RSSerpent \u63d2\u4ef6\u505a\u8d21\u732e\uff0c\u8bf7\u53c2\u8003 \u6838\u5fc3 \uff1b \u5982\u679c\u4f60\u60f3\u8981\u65b0\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\uff0c\u8bf7\u53c2\u8003 \u63d2\u4ef6 \uff1b \u5982\u679c\u4f60\u60f3\u5728\u7ecf\u6d4e\u4e0a\u652f\u6301 RSSerpent \u9879\u76ee\uff0c\u8bf7\u79fb\u6b65 Open Collective \u6216 \u7231\u53d1\u7535 \u3002","title":"\u73af\u5883"},{"location":"zh/contribution/#\u73af\u5883","text":"\u65e0\u8bba\u4f60\u662f\u60f3\u5411 RSSerpent \u6838\u5fc3 \u3001\u6216\u662f\u4efb\u4e00 RSSerpent \u5b98\u65b9/\u793e\u533a \u63d2\u4ef6 \u505a\u8d21\u732e\uff0c\u4f60\u90fd\u9700\u8981\u9605\u8bfb\u5e76\u4f9d\u4ece\u672c\u6587\u6863\u7684\u6307\u793a\uff0c\u6765\u642d\u5efa\u4e00\u4e2a\u5f00\u53d1\u73af\u5883\u3002","title":"\u73af\u5883"},{"location":"zh/contribution/#python","text":"RSSerpent \u4f7f\u7528 Python \u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u5728\u4f60\u7684\u7cfb\u7edf\u4e0a\u5b89\u88c5 Python \u624d\u80fd\u8fd0\u884c RSSerpent\u3002\u6700\u901a\u7528\u7684 Python \u5b89\u88c5\u65b9\u5f0f\u5c31\u662f\u5230 Python \u5b98\u65b9 \u4e0b\u8f7d\u9875\u9762 \u53bb\u4e0b\u8f7d\u4e00\u4e2a\u5b89\u88c5\u5305\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5305\u7ba1\u7406\u5668\u6765\u5b89\u88c5\uff1a Linux macOS Windows # Arch sudo pacman -S python # Debian/Ubuntu sudo apt update sudo apt install python3 python3-pip # Homebrew brew install python # MacPorts sudo port selfupdate sudo port install python # Chocolatey choco install python # Scoop scoop install python Note \u5982\u679c\u4f60\u9700\u8981\u5728\u7cfb\u7edf\u4e0a\u5b89\u88c5\u591a\u4e2a Python \u7248\u672c\uff0c\u8bf7\u8003\u8651\u4f7f\u7528 pyenv \u3002 Note \u5982\u679c\u4f60\u4f7f\u7528 Windows \u7cfb\u7edf\uff0c\u4f60\u8fd8\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONIOENCODING=utf8 \u3002 \u6210\u529f\u5b89\u88c5\u4ee5\u540e\uff0c\u4f60\u9700\u8981\u8fd0\u884c python -V \uff08\u6216\u8005 python3 -V \uff09\u6765\u786e\u8ba4 Python \u7684\u7248\u672c\u3002\u8fd9\u662f\u56e0\u4e3a\u6709\u4e9b\u5305\u7ba1\u7406\u5668\u9ed8\u8ba4\u5b89\u88c5\u7684 Python \u7248\u672c\u4e0d\u4e00\u5b9a\u53d7 RSSerpent \u652f\u6301\u3002\u5982\u9047\u6b64\u79cd\u60c5\u51b5\uff0c\u8bf7\u53c2\u8003\u5305\u7ba1\u7406\u5668\u7684\u76f8\u5173\u6587\u6863\u6765\u5b89\u88c5\u53d7 RSSerpent \u652f\u6301\u7684 Python \u7248\u672c\u3002 Note \u8bf7\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e0a\u4e5f\u5b89\u88c5\u4e86 git \u3002","title":"Python"},{"location":"zh/contribution/#poetry","text":"Poetry \u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684 Python \u6253\u5305\u548c\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0cRSSerpent \u76ee\u524d\u4f7f\u7528 Poetry \u6765\u7ba1\u7406\u9879\u76ee\u4f9d\u8d56\u3002\u8bf7\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5 Poetry\uff1a Unix Windows curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - ( Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing ) .Content | python -","title":"Poetry"},{"location":"zh/contribution/#\u63a5\u4e0b\u6765","text":"\u5982\u679c\u4f60\u60f3\u8981\u5411 RSSerpent \u6838\u5fc3\u3001\u6216\u8005\u4efb\u4e00\u5df2\u6709\u7684 RSSerpent \u63d2\u4ef6\u505a\u8d21\u732e\uff0c\u8bf7\u53c2\u8003 \u6838\u5fc3 \uff1b \u5982\u679c\u4f60\u60f3\u8981\u65b0\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\uff0c\u8bf7\u53c2\u8003 \u63d2\u4ef6 \uff1b \u5982\u679c\u4f60\u60f3\u5728\u7ecf\u6d4e\u4e0a\u652f\u6301 RSSerpent \u9879\u76ee\uff0c\u8bf7\u79fb\u6b65 Open Collective \u6216 \u7231\u53d1\u7535 \u3002","title":"\u63a5\u4e0b\u6765\u2026"},{"location":"zh/contribution/core/","text":"\u6838\u5fc3 \u00b6 Note \u8bf7\u786e\u4fdd\u4f60\u6b64\u524d\u5df2\u9605\u8bfb\u8fc7 \u73af\u5883 \u3002 \u5982\u679c\u4f60\u60f3\u8981\u5411 RSSerpent \u6838\u5fc3\uff08\u6216\u4efb\u4e00\u5df2\u6709\u7684 RSSerpent \u63d2\u4ef6\u9879\u76ee\uff09\u505a\u8d21\u732e\uff0c\u8bf7\u9605\u8bfb\u672c\u6559\u7a0b\u6765\u5b66\u4e60\u8d21\u732e\u7684\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\u3002 \u590d\u523b\u4ee3\u7801 \u00b6 \u4ee5 RSSerpent \u6838\u5fc3 \u4e3a\u4f8b\uff1a \u5728 GitHub \u7f51\u7ad9\u4e0a\uff0c\u627e\u5230\u4f60\u60f3\u8981\u5171\u4eab\u7684\u9879\u76ee\u4ee3\u7801\u4ed3\u5e93\u3002\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u7684 Fork \u6309\u94ae\u590d\u523b\uff0c\u8fd9\u6837\u4f60\u5c31\u80fd\u83b7\u5f97\u4e00\u4efd\u5c5e\u4e8e\u4f60\u81ea\u5df1\u7684\u539f\u4ee3\u7801\u4ed3\u5e93\u7684\u590d\u5236\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u590d\u523b\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002 \u5b89\u88c5\u4f9d\u8d56 \u00b6 \u5c06\u4f60\u7684\u590d\u523b\u4ee3\u7801\u4ed3\u5e93\u514b\u9686\uff08clone\uff09\u5230\u672c\u5730\u3002\u6253\u5f00\u7ec8\u7aef\uff0c\u4f7f\u7528 cd \u6307\u4ee4\u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\u5e76\u8fd0\u884c\uff1a poetry install poetry run pre-commit install -t pre-commit -t commit-msg \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u4e3a\u4f60\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\u548c pre-commit \u94a9\u5b50\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u514b\u9686\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002 \u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528 SSH \u5bc6\u94a5\uff08\u800c\u975e\u5bc6\u7801\uff09\u6765\u8fde\u63a5 GitHub\u3002\u5982\u9700\u4e86\u89e3\u5982\u4f55\u914d\u7f6e SSH \u5bc6\u94a5\uff0c\u8bf7\u9605\u8bfb\u8fd9\u7bc7 GitHub \u6587\u6863 \u3002 \u521b\u5efa\u5206\u652f \u00b6 \u5728\u4f60\u7684\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u8fd0\u884c git checkout -b <\u5206\u652f\u540d> \u4ee5\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002\u8bf7\u5728\u8fd9\u4e2a\u5206\u679d\u4e0a\u5b8c\u6210\u4f60\u6240\u6709\u7684\u5de5\u4f5c\uff0c\u4e0d\u8981\u53bb\u4f7f\u7528 master \uff08\u6216 main \uff09\u5206\u652f\u3002\u8fd9\u6837\u505a\u80fd\u4fdd\u8bc1\u4f60\u7684\u590d\u523b\u4ed3\u5e93\u4e0e\u539f\u4ed3\u5e93\u4e4b\u95f4\u6ca1\u6709\u51b2\u7a81\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u62c9\u53bb\u8bf7\u6c42\uff0c\u6211\u4eec\u90fd\u4f7f\u7528\u4e0d\u540c\u7684\u5206\u652f\u3002\u53d6\u51b3\u4e8e\u4f60\u7684\u7f51\u7edc\u8fde\u63a5\u8d28\u91cf\uff0c\u5b89\u88c5\u4f9d\u8d56\u7684\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u6570\u5206\u949f\u4e0d\u7b49\u3002 Note \u4e60\u60ef\u4e0a\uff0c\u5982\u679c\u4f60\u8981\u5f00\u53d1\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u5206\u652f\u540d\u4f1a\u53eb feat/xxx \uff1b\u5982\u679c\u4f60\u8981\u4fee\u590d\u4e00\u4e2a bug\uff0c\u5206\u652f\u540d\u4f1a\u53eb fix/xxx \u3002 \u62c9\u53d6\u8bf7\u6c42 \u00b6 \u5728\u4f60\u5c06\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u53d8\u66f4\u63d0\u4ea4\uff08commit\uff09\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e9b commit \u63a8\u9001\uff08push\uff09\u5230\u8fdc\u7aef\u7684 GitHub \u4ed3\u5e93\u91cc\u3002\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u5728\u67d0\u4e2a\u5206\u652f\u4e0a\u8fdb\u884c\u63a8\u9001\uff0c\u4f60\u9700\u8981\u8fd0\u884c git push -u origin <\u5206\u652f\u540d> \uff1b\u6b64\u540e\u4f60\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u76f4\u63a5\u8fd0\u884c git push \u3002 \u5b8c\u6210\u63a8\u9001\u540e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8df3\u8f6c\u5230\u4f60\u590d\u523b\u7684\u4ee3\u7801\u4ed3\u5e93\u3002\u4f60\u4f1a\u5728\u6587\u4ef6\u5217\u8868\u4e0a\u65b9\u770b\u5230\u4e00\u4e2a Pull request \u6309\u94ae\u3002\u70b9\u51fb\u8be5\u6309\u94ae\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42\uff0c\u4f60\u80fd\u5c06\u4f60\u5728\u81ea\u5df1\u590d\u523b\u4e0a\u7684\u5de5\u4f5c\u6210\u679c\u63d0\u4ea4\u5230\u539f\u4ed3\u5e93\uff0c\u800c\u539f\u4ed3\u5e93\u7684\u7ef4\u62a4\u8005\u4f1a\u51b3\u5b9a\u662f\u5426\u8981\u63a5\u53d7\u4f60\u7684\u62c9\u53d6\u8bf7\u6c42\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u62c9\u53d6\u8bf7\u6c42\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002 \u63a5\u4e0b\u6765\u2026 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u5728\u8ba8\u8bba\u5411 RSSerpent \u6838\u5fc3\u505a\u8d21\u732e\u7684\u6574\u4f53\u6d41\u7a0b\u3002\u5982\u679c\u4f60\u60f3\u8981\u627e\u4e00\u4e9b\u5177\u4f53\u7684\u95ee\u9898\u6765\u89e3\u51b3\uff0c\u4f60\u53ef\u4ee5\uff1a \u6d4f\u89c8 issue/discussion \u5217\u8868\uff0c\u627e\u5230\u4f60\u611f\u5174\u8da3\u7684\u5185\u5bb9\uff0c\u5728\u8be5 issue/discussion \u4e0b\u56de\u590d\u58f0\u660e\u4f60\u6b63\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u3002 \u627e\u5230\u4e00\u4e2a bug\uff0c\u521b\u5efa\u4e00\u4e2a issue \u8bf4\u660e\u8fd9\u4e2a bug\uff0c\u5e76\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u89e3\u51b3\u8fd9\u4e2a issue\u3002 \u60f3\u51fa\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u521b\u5efa\u4e00\u4e2a discussion \u8bf4\u660e\u8fd9\u4e2a\u65b0\u529f\u80fd\uff0c\u5982\u679c\u9879\u76ee\u7ef4\u62a4\u8005\u613f\u610f\u63a5\u53d7\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002","title":"\u6838\u5fc3"},{"location":"zh/contribution/core/#\u6838\u5fc3","text":"Note \u8bf7\u786e\u4fdd\u4f60\u6b64\u524d\u5df2\u9605\u8bfb\u8fc7 \u73af\u5883 \u3002 \u5982\u679c\u4f60\u60f3\u8981\u5411 RSSerpent \u6838\u5fc3\uff08\u6216\u4efb\u4e00\u5df2\u6709\u7684 RSSerpent \u63d2\u4ef6\u9879\u76ee\uff09\u505a\u8d21\u732e\uff0c\u8bf7\u9605\u8bfb\u672c\u6559\u7a0b\u6765\u5b66\u4e60\u8d21\u732e\u7684\u6574\u4f53\u5de5\u4f5c\u6d41\u7a0b\u3002","title":"\u6838\u5fc3"},{"location":"zh/contribution/core/#\u590d\u523b\u4ee3\u7801","text":"\u4ee5 RSSerpent \u6838\u5fc3 \u4e3a\u4f8b\uff1a \u5728 GitHub \u7f51\u7ad9\u4e0a\uff0c\u627e\u5230\u4f60\u60f3\u8981\u5171\u4eab\u7684\u9879\u76ee\u4ee3\u7801\u4ed3\u5e93\u3002\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u7684 Fork \u6309\u94ae\u590d\u523b\uff0c\u8fd9\u6837\u4f60\u5c31\u80fd\u83b7\u5f97\u4e00\u4efd\u5c5e\u4e8e\u4f60\u81ea\u5df1\u7684\u539f\u4ee3\u7801\u4ed3\u5e93\u7684\u590d\u5236\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u590d\u523b\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002","title":"\u590d\u523b\u4ee3\u7801"},{"location":"zh/contribution/core/#\u5b89\u88c5\u4f9d\u8d56","text":"\u5c06\u4f60\u7684\u590d\u523b\u4ee3\u7801\u4ed3\u5e93\u514b\u9686\uff08clone\uff09\u5230\u672c\u5730\u3002\u6253\u5f00\u7ec8\u7aef\uff0c\u4f7f\u7528 cd \u6307\u4ee4\u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55\u5e76\u8fd0\u884c\uff1a poetry install poetry run pre-commit install -t pre-commit -t commit-msg \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u4e3a\u4f60\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\u548c pre-commit \u94a9\u5b50\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u514b\u9686\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002 \u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528 SSH \u5bc6\u94a5\uff08\u800c\u975e\u5bc6\u7801\uff09\u6765\u8fde\u63a5 GitHub\u3002\u5982\u9700\u4e86\u89e3\u5982\u4f55\u914d\u7f6e SSH \u5bc6\u94a5\uff0c\u8bf7\u9605\u8bfb\u8fd9\u7bc7 GitHub \u6587\u6863 \u3002","title":"\u5b89\u88c5\u4f9d\u8d56"},{"location":"zh/contribution/core/#\u521b\u5efa\u5206\u652f","text":"\u5728\u4f60\u7684\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u8fd0\u884c git checkout -b <\u5206\u652f\u540d> \u4ee5\u521b\u5efa\u4e00\u4e2a\u5206\u652f\u3002\u8bf7\u5728\u8fd9\u4e2a\u5206\u679d\u4e0a\u5b8c\u6210\u4f60\u6240\u6709\u7684\u5de5\u4f5c\uff0c\u4e0d\u8981\u53bb\u4f7f\u7528 master \uff08\u6216 main \uff09\u5206\u652f\u3002\u8fd9\u6837\u505a\u80fd\u4fdd\u8bc1\u4f60\u7684\u590d\u523b\u4ed3\u5e93\u4e0e\u539f\u4ed3\u5e93\u4e4b\u95f4\u6ca1\u6709\u51b2\u7a81\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u62c9\u53bb\u8bf7\u6c42\uff0c\u6211\u4eec\u90fd\u4f7f\u7528\u4e0d\u540c\u7684\u5206\u652f\u3002\u53d6\u51b3\u4e8e\u4f60\u7684\u7f51\u7edc\u8fde\u63a5\u8d28\u91cf\uff0c\u5b89\u88c5\u4f9d\u8d56\u7684\u8fc7\u7a0b\u53ef\u80fd\u9700\u8981\u6570\u5206\u949f\u4e0d\u7b49\u3002 Note \u4e60\u60ef\u4e0a\uff0c\u5982\u679c\u4f60\u8981\u5f00\u53d1\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u5206\u652f\u540d\u4f1a\u53eb feat/xxx \uff1b\u5982\u679c\u4f60\u8981\u4fee\u590d\u4e00\u4e2a bug\uff0c\u5206\u652f\u540d\u4f1a\u53eb fix/xxx \u3002","title":"\u521b\u5efa\u5206\u652f"},{"location":"zh/contribution/core/#\u62c9\u53d6\u8bf7\u6c42","text":"\u5728\u4f60\u5c06\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u53d8\u66f4\u63d0\u4ea4\uff08commit\uff09\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e9b commit \u63a8\u9001\uff08push\uff09\u5230\u8fdc\u7aef\u7684 GitHub \u4ed3\u5e93\u91cc\u3002\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u5728\u67d0\u4e2a\u5206\u652f\u4e0a\u8fdb\u884c\u63a8\u9001\uff0c\u4f60\u9700\u8981\u8fd0\u884c git push -u origin <\u5206\u652f\u540d> \uff1b\u6b64\u540e\u4f60\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u76f4\u63a5\u8fd0\u884c git push \u3002 \u5b8c\u6210\u63a8\u9001\u540e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8df3\u8f6c\u5230\u4f60\u590d\u523b\u7684\u4ee3\u7801\u4ed3\u5e93\u3002\u4f60\u4f1a\u5728\u6587\u4ef6\u5217\u8868\u4e0a\u65b9\u770b\u5230\u4e00\u4e2a Pull request \u6309\u94ae\u3002\u70b9\u51fb\u8be5\u6309\u94ae\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002\u901a\u8fc7\u62c9\u53d6\u8bf7\u6c42\uff0c\u4f60\u80fd\u5c06\u4f60\u5728\u81ea\u5df1\u590d\u523b\u4e0a\u7684\u5de5\u4f5c\u6210\u679c\u63d0\u4ea4\u5230\u539f\u4ed3\u5e93\uff0c\u800c\u539f\u4ed3\u5e93\u7684\u7ef4\u62a4\u8005\u4f1a\u51b3\u5b9a\u662f\u5426\u8981\u63a5\u53d7\u4f60\u7684\u62c9\u53d6\u8bf7\u6c42\u3002 Note \u5982\u9700\u8fdb\u4e00\u6b65\u4e86\u89e3\u62c9\u53d6\u8bf7\u6c42\uff0c\u8bf7\u9605\u8bfb GitHub \u6587\u6863 \u3002","title":"\u62c9\u53d6\u8bf7\u6c42"},{"location":"zh/contribution/core/#\u63a5\u4e0b\u6765","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u5728\u8ba8\u8bba\u5411 RSSerpent \u6838\u5fc3\u505a\u8d21\u732e\u7684\u6574\u4f53\u6d41\u7a0b\u3002\u5982\u679c\u4f60\u60f3\u8981\u627e\u4e00\u4e9b\u5177\u4f53\u7684\u95ee\u9898\u6765\u89e3\u51b3\uff0c\u4f60\u53ef\u4ee5\uff1a \u6d4f\u89c8 issue/discussion \u5217\u8868\uff0c\u627e\u5230\u4f60\u611f\u5174\u8da3\u7684\u5185\u5bb9\uff0c\u5728\u8be5 issue/discussion \u4e0b\u56de\u590d\u58f0\u660e\u4f60\u6b63\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u3002 \u627e\u5230\u4e00\u4e2a bug\uff0c\u521b\u5efa\u4e00\u4e2a issue \u8bf4\u660e\u8fd9\u4e2a bug\uff0c\u5e76\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u89e3\u51b3\u8fd9\u4e2a issue\u3002 \u60f3\u51fa\u4e00\u4e2a\u65b0\u529f\u80fd\uff0c\u521b\u5efa\u4e00\u4e2a discussion \u8bf4\u660e\u8fd9\u4e2a\u65b0\u529f\u80fd\uff0c\u5982\u679c\u9879\u76ee\u7ef4\u62a4\u8005\u613f\u610f\u63a5\u53d7\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u63d0\u4ea4\u4e00\u4e2a\u62c9\u53d6\u8bf7\u6c42\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002","title":"\u63a5\u4e0b\u6765\u2026"},{"location":"zh/contribution/plugin/","text":"\u521b\u5efa\u63d2\u4ef6 \u00b6 Note \u8bf7\u786e\u4fdd\u4f60\u6b64\u524d\u5df2\u9605\u8bfb\u8fc7 \u73af\u5883 \u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6559\u7a0b\uff0c\u4f60\u5c06\u5b66\u4f1a\u5982\u4f55\u4ece\u5934\u642d\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\u3002 \u642d\u5efa\u9879\u76ee \u00b6 \u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 cookiecutter \uff0c\u4ee5\u4fbf\u80fd\u4f7f\u7528\u5b98\u65b9\u63d2\u4ef6 \u6a21\u677f \u6765\u5feb\u901f\u642d\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\u3002 pip install --user cookiecutter # or on macOS brew install cookiecutter # or on Debian/Ubuntu sudo apt install cookiecutter \u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u642d\u5efa\u9879\u76ee\u4e86\uff01\u5728\u4f60\u7684\u7ec8\u7aef\u91cc\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bdd\u9875\u9762\u5e76\u6267\u884c\uff1a cookiecutter gh:rsserpent/template \u8fd9\u4e2a\u547d\u4ee4\u9996\u5148\u4f1a\u4ece GitHub \u4e0b\u8f7d RSSerpent \u5b98\u65b9\u63d2\u4ef6\u6a21\u677f\uff0c\u968f\u540e\u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff08\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u662f\u63d2\u4ef6\u540d\u3001\u63d2\u4ef6\u63cf\u8ff0\u3001\u4f5c\u8005\u540d\u3001\u4f5c\u8005\u4e3b\u9875\u94fe\u63a5\u3001\u4f5c\u8005\u90ae\u7bb1\uff09\uff1a plugin [rsserpent-plugin-xxx]: description [An rsserpent plugin for xxx.]: username [queensferryme]: link [https://github.com/queensferryme]: email [queensferryme@example.com]: \u65b9\u62ec\u53f7 [...] \u4e4b\u95f4\u7684\u6587\u672c\u65f6\u5bf9\u5e94\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\uff0c\u4f60\u53ef\u4ee5\u6309\u4e0b\u56de\u8f66\u952e\u63a5\u53d7\u9ed8\u8ba4\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5728\u5192\u53f7\u540e\u8f93\u5165\u5185\u5bb9\u3002\u4f60\u7684\u4e2a\u4eba\u4fe1\u606f\uff08 \u90ae\u7bb1\u5730\u5740 \u7b49\uff09\u53ea\u4f1a\u88ab\u7528\u6765\u586b\u5145\u9879\u76ee\u6a21\u677f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u586b\u5199\u5e76\u4fdd\u6301\u533f\u540d\u3002 \u586b\u5199\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f1a\u4e3a\u4f60\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a rsserpent-plugin-xxx/ \u7684\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6240\u6709\u57fa\u672c\u9879\u76ee\u914d\u7f6e\u3002\u7136\u540e\u8fd8\u4f1a\u4f7f\u7528 poetry \u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\uff0c\u5e76\u5b89\u88c5 pre-commit \u94a9\u5b50 \u2014\u2014 \u53d6\u51b3\u4e8e\u4f60\u7684\u7f51\u7edc\u8fde\u63a5\u8d28\u91cf\uff0c\u8fd9\u4e00\u6b65\u53ef\u80fd\u9700\u8981\u6570\u5206\u949f\u4e0d\u7b49\u3002 \u8fdb\u884c\u5f00\u53d1 \u00b6 \u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528 Visual Studio Code \uff08\u7b80\u79f0 VSCode\uff09\u8fd9\u4e00\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u8fdb\u884c\u63d2\u4ef6\u5f00\u53d1\u3002\u4f7f\u7528 VSCode \u6253\u5f00\u4f60\u521a\u521a\u521b\u5efa\u7684\u6587\u4ef6\u5939\uff0cVSCode \u53ef\u80fd\u4f1a\u63d0\u793a\u4f60\u5b89\u88c5\u4e00\u4e9b\u63a8\u8350\u7684 VSCode \u63d2\u4ef6\u3002\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u5f00\u53d1 RSSerpent \u63d2\u4ef6\u4e86\u3002 RSSerpent \u63d2\u4ef6\u7684\u4e3b\u8981\u90e8\u5206\u5c31\u662f\u4e00\u7cfb\u5217 \u8def\u7531 \uff0c\u6bcf\u4e2a\u8def\u7531\u90fd\u5305\u542b\u4e00\u4e2a path \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u3002 from typing import Any , Dict path = \"/path/to/route\" async def provider () -> Dict [ str , Any ]: return { \"title\" : \"Example\" , \"link\" : \"https://example.com\" , \"description\" : \"An example rsserpent plugin.\" , \"items\" : [{ \"title\" : \"Example Title\" , \"description\" : \"Example Description\" }], } Note \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u591a\u8def\u7531\u8303\u4f8b\u3002 Warning \u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u5fc5\u987b\u662f async \u51fd\u6570\uff0c\u5e76\u4e14\u4e0d\u80fd\u5305\u542b position-only arguments \u3002 \u5b57\u7b26\u4e32 path \u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u5f84\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u8def\u5f84\u6765\u8bbf\u95ee\u5230 RSS \u8ba2\u9605\u94fe\u63a5\uff1b\u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u5219\u8d1f\u8d23\u63d0\u4f9b\u76f8\u5e94\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u4e8e\u521b\u5efa\u53ef\u8ba2\u9605\u7684 RSS \u5185\u5bb9\u5e76\u5448\u73b0\u7ed9\u7528\u6237\u3002\u4f5c\u4e3a\u63d2\u4ef6\u5f00\u53d1\u8005\uff0c\u4f60\u8fd8\u9700\u8981\u5c06\u8def\u7531\u6ce8\u518c\u5230 rsserpent_plugin_xxx/__init__.py \uff1a from . import route1 , route2 , route3 plugin = Plugin ( # ... routers = { route1 . path : route1 . provider , route2 . path : route2 . provider , route3 . path : route3 . provider , }, ) Note Poetry \u5c06\u4f60\u7684\u9879\u76ee\u4f9d\u8d56\u5b89\u88c5\u5728\u4e00\u4e2a\u9694\u79bb\u7684 \u865a\u62df\u73af\u5883 \u4e2d\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u4f7f\u7528 poetry shell \u6216 source $(poetry env info -p)/bin/activate \u547d\u4ee4\u6765\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u73af\u5883\u4e2d\u7684 pre-commit \uff0c pytest \uff0c uvicorn \u7b49\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u5728\u7ec8\u7aef\u91cc\u6267\u884c uvicorn --reload rsserpent:app \uff0c\u4f60\u5c31\u80fd\u5728\u672c\u5730\u542f\u52a8\u4e00\u4e2a RSSerpent \u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u7528\u4ee5\u8c03\u8bd5\u4f60\u7684\u63d2\u4ef6\u3002 \u279c uvicorn --reload rsserpent:app INFO: Will watch for changes in these directories: ['/path/to/your/directory'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [30920] using statreload INFO: Started server process [30922] INFO: Waiting for application startup. INFO: Application startup complete. Note \u5f3a\u70c8\u63a8\u8350\u63d2\u4ef6\u4f5c\u8005\u7f16\u5199\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u4f60\u7684\u63d2\u4ef6\u80fd\u66f4\u9c81\u68d2\u3001\u6ca1\u6709\u9519\u8bef\u3002\u6d4b\u8bd5\u9700\u8981\u7f16\u5199\u5728 tests/ \u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u4f7f\u7528 pytest \u547d\u4ee4\u6765\u8fd0\u884c\u3002 \u53d1\u5e03\u63d2\u4ef6 \u00b6 \u5f53\u4f60\u5728\u672c\u5730\u5bf9\u63d2\u4ef6\u8fdb\u884c\u4e86\u8db3\u591f\u591a\u7684\u6539\u52a8\u540e\uff0c\u8bf7\u786e\u4fdd\u4f60\u8bb2\u8fd9\u4e9b\u6539\u52a8\u63d0\u4ea4\uff08commit\uff09\u5e76\u63a8\u9001\uff08push\uff09\u5230 GitHub\u3002\u8fd9\u6837\u5b50\uff0c\u4f60\u63d2\u4ef6\u7684\u7528\u6237\u624d\u80fd\u4f7f\u7528\u5230\u4f60\u7684\u6700\u65b0\u5de5\u4f5c\u6210\u679c\u3002 git add --all git commit -m \"<type>: <description>\" git push origin Note \u63d0\u4ea4\u4fe1\u606f\uff08commit message\uff09\u5e94\u8be5\u9075\u5faa Conventional Commits \u89c4\u8303\u3002 \u5f53\u4f60\u8fd0\u884c git commit \u63d0\u4ea4\u65f6\uff0c\u4f60\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u7cfb\u5217 pre-commit \u94a9\u5b50\uff0c\u8fd9\u4e9b\u94a9\u5b50\u4f1a\u5bf9\u4f60\u7684\u4ee3\u7801\u7b49\u8fdb\u884c\u68c0\u67e5\u3002\u8bf7\u786e\u4fdd\u4f60\u5c06\u6539\u52a8\u63a8\u9001\u5230 GitHub \u524d\u5df2\u6210\u529f\u901a\u8fc7\u6240\u6709\u68c0\u67e5\u3002\u4f60\u4e5f\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u6765\u624b\u52a8\u8fdb\u884c\u68c0\u67e5\uff1a \u279c pre-commit run --all-files Nitpick Check............................................................Passed Fix End of Files.........................................................Passed Trim Trailing Whitespace.................................................Passed Check Blanket \"#noqa\"....................................................Passed Check Blanket \"#type:ignore\".............................................Passed Upgrade Python Syntax....................................................Passed Check Typos..............................................................Passed Format Source Code.......................................................Passed Sort Imports.............................................................Passed Type Check...............................................................Passed Lint.....................................................................Passed Note \u6211\u4eec\u5728 pre-commit \u94a9\u5b50\u4e2d\u8fd0\u884c\u4e86 black / isort \u4ee3\u7801\u683c\u5f0f\u5316, mypy \u7c7b\u578b\u68c0\u67e5\uff0c\u4ee5\u53ca flake8 \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u3002 \u6211\u4eec\u8fd8\u8fd0\u884c\u4e86 nitpick \u8fd9\u4e2a\u94a9\u5b50\uff1a\u5b83\u5305\u542b\u4e86\u4e00\u7cfb\u5217 RSSerpent \u5b98\u65b9\u63a8\u8350\u7684 black/isort/mypy/flake8 \u7b49\u5f00\u53d1\u5de5\u5177\u7684 \u914d\u7f6e \uff0c\u5e0c\u671b\u63d2\u4ef6\u5f00\u53d1\u8005\u80fd\u591f\u9075\u5b88\u3002 Warning \u5982\u679c\u4f60\u5728\u6267\u884c git commit \u65f6\uff0c\u6ca1\u6709\u89e6\u53d1\u4efb\u4f55 pre-commit \u94a9\u5b50\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u770b\u5230\u5982\u4e0a\u6807\u8bb0\u6709 Passed \u901a\u8fc7\u6216 Failed \u5931\u8d25\u7684\u82e5\u5e72\u884c\u68c0\u67e5\uff09\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c pre-commit install -t pre-commit -t commit-msg \u6765\u624b\u52a8\u5b89\u88c5 pre-commit \u94a9\u5b50\u3002","title":"\u521b\u5efa\u63d2\u4ef6"},{"location":"zh/contribution/plugin/#\u521b\u5efa\u63d2\u4ef6","text":"Note \u8bf7\u786e\u4fdd\u4f60\u6b64\u524d\u5df2\u9605\u8bfb\u8fc7 \u73af\u5883 \u3002 \u901a\u8fc7\u9605\u8bfb\u672c\u6559\u7a0b\uff0c\u4f60\u5c06\u5b66\u4f1a\u5982\u4f55\u4ece\u5934\u642d\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\u3002","title":"\u521b\u5efa\u63d2\u4ef6"},{"location":"zh/contribution/plugin/#\u642d\u5efa\u9879\u76ee","text":"\u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 cookiecutter \uff0c\u4ee5\u4fbf\u80fd\u4f7f\u7528\u5b98\u65b9\u63d2\u4ef6 \u6a21\u677f \u6765\u5feb\u901f\u642d\u5efa\u4e00\u4e2a RSSerpent \u63d2\u4ef6\u9879\u76ee\u3002 pip install --user cookiecutter # or on macOS brew install cookiecutter # or on Debian/Ubuntu sudo apt install cookiecutter \u73b0\u5728\u53ef\u4ee5\u5f00\u59cb\u642d\u5efa\u9879\u76ee\u4e86\uff01\u5728\u4f60\u7684\u7ec8\u7aef\u91cc\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bdd\u9875\u9762\u5e76\u6267\u884c\uff1a cookiecutter gh:rsserpent/template \u8fd9\u4e2a\u547d\u4ee4\u9996\u5148\u4f1a\u4ece GitHub \u4e0b\u8f7d RSSerpent \u5b98\u65b9\u63d2\u4ef6\u6a21\u677f\uff0c\u968f\u540e\u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff08\u4ece\u4e0a\u5f80\u4e0b\u4f9d\u6b21\u662f\u63d2\u4ef6\u540d\u3001\u63d2\u4ef6\u63cf\u8ff0\u3001\u4f5c\u8005\u540d\u3001\u4f5c\u8005\u4e3b\u9875\u94fe\u63a5\u3001\u4f5c\u8005\u90ae\u7bb1\uff09\uff1a plugin [rsserpent-plugin-xxx]: description [An rsserpent plugin for xxx.]: username [queensferryme]: link [https://github.com/queensferryme]: email [queensferryme@example.com]: \u65b9\u62ec\u53f7 [...] \u4e4b\u95f4\u7684\u6587\u672c\u65f6\u5bf9\u5e94\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\uff0c\u4f60\u53ef\u4ee5\u6309\u4e0b\u56de\u8f66\u952e\u63a5\u53d7\u9ed8\u8ba4\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5728\u5192\u53f7\u540e\u8f93\u5165\u5185\u5bb9\u3002\u4f60\u7684\u4e2a\u4eba\u4fe1\u606f\uff08 \u90ae\u7bb1\u5730\u5740 \u7b49\uff09\u53ea\u4f1a\u88ab\u7528\u6765\u586b\u5145\u9879\u76ee\u6a21\u677f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e0d\u586b\u5199\u5e76\u4fdd\u6301\u533f\u540d\u3002 \u586b\u5199\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f1a\u4e3a\u4f60\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a rsserpent-plugin-xxx/ \u7684\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6240\u6709\u57fa\u672c\u9879\u76ee\u914d\u7f6e\u3002\u7136\u540e\u8fd8\u4f1a\u4f7f\u7528 poetry \u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\uff0c\u5e76\u5b89\u88c5 pre-commit \u94a9\u5b50 \u2014\u2014 \u53d6\u51b3\u4e8e\u4f60\u7684\u7f51\u7edc\u8fde\u63a5\u8d28\u91cf\uff0c\u8fd9\u4e00\u6b65\u53ef\u80fd\u9700\u8981\u6570\u5206\u949f\u4e0d\u7b49\u3002","title":"\u642d\u5efa\u9879\u76ee"},{"location":"zh/contribution/plugin/#\u8fdb\u884c\u5f00\u53d1","text":"\u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528 Visual Studio Code \uff08\u7b80\u79f0 VSCode\uff09\u8fd9\u4e00\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u8fdb\u884c\u63d2\u4ef6\u5f00\u53d1\u3002\u4f7f\u7528 VSCode \u6253\u5f00\u4f60\u521a\u521a\u521b\u5efa\u7684\u6587\u4ef6\u5939\uff0cVSCode \u53ef\u80fd\u4f1a\u63d0\u793a\u4f60\u5b89\u88c5\u4e00\u4e9b\u63a8\u8350\u7684 VSCode \u63d2\u4ef6\u3002\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u5f00\u53d1 RSSerpent \u63d2\u4ef6\u4e86\u3002 RSSerpent \u63d2\u4ef6\u7684\u4e3b\u8981\u90e8\u5206\u5c31\u662f\u4e00\u7cfb\u5217 \u8def\u7531 \uff0c\u6bcf\u4e2a\u8def\u7531\u90fd\u5305\u542b\u4e00\u4e2a path \u5b57\u7b26\u4e32\u548c\u4e00\u4e2a\u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u3002 from typing import Any , Dict path = \"/path/to/route\" async def provider () -> Dict [ str , Any ]: return { \"title\" : \"Example\" , \"link\" : \"https://example.com\" , \"description\" : \"An example rsserpent plugin.\" , \"items\" : [{ \"title\" : \"Example Title\" , \"description\" : \"Example Description\" }], } Note \u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u66f4\u591a\u8def\u7531\u8303\u4f8b\u3002 Warning \u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u5fc5\u987b\u662f async \u51fd\u6570\uff0c\u5e76\u4e14\u4e0d\u80fd\u5305\u542b position-only arguments \u3002 \u5b57\u7b26\u4e32 path \u5b9a\u4e49\u4e86\u4e00\u4e2a\u8def\u5f84\uff0c\u7528\u6237\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u8def\u5f84\u6765\u8bbf\u95ee\u5230 RSS \u8ba2\u9605\u94fe\u63a5\uff1b\u6570\u636e\u63d0\u4f9b\u51fd\u6570 provider \u5219\u8d1f\u8d23\u63d0\u4f9b\u76f8\u5e94\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u88ab\u7528\u4e8e\u521b\u5efa\u53ef\u8ba2\u9605\u7684 RSS \u5185\u5bb9\u5e76\u5448\u73b0\u7ed9\u7528\u6237\u3002\u4f5c\u4e3a\u63d2\u4ef6\u5f00\u53d1\u8005\uff0c\u4f60\u8fd8\u9700\u8981\u5c06\u8def\u7531\u6ce8\u518c\u5230 rsserpent_plugin_xxx/__init__.py \uff1a from . import route1 , route2 , route3 plugin = Plugin ( # ... routers = { route1 . path : route1 . provider , route2 . path : route2 . provider , route3 . path : route3 . provider , }, ) Note Poetry \u5c06\u4f60\u7684\u9879\u76ee\u4f9d\u8d56\u5b89\u88c5\u5728\u4e00\u4e2a\u9694\u79bb\u7684 \u865a\u62df\u73af\u5883 \u4e2d\u3002\u56e0\u6b64\uff0c\u4f60\u9700\u8981\u4f7f\u7528 poetry shell \u6216 source $(poetry env info -p)/bin/activate \u547d\u4ee4\u6765\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u865a\u62df\u73af\u5883\u4e2d\u7684 pre-commit \uff0c pytest \uff0c uvicorn \u7b49\u547d\u4ee4\u884c\u5de5\u5177\u3002 \u5728\u7ec8\u7aef\u91cc\u6267\u884c uvicorn --reload rsserpent:app \uff0c\u4f60\u5c31\u80fd\u5728\u672c\u5730\u542f\u52a8\u4e00\u4e2a RSSerpent \u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u7528\u4ee5\u8c03\u8bd5\u4f60\u7684\u63d2\u4ef6\u3002 \u279c uvicorn --reload rsserpent:app INFO: Will watch for changes in these directories: ['/path/to/your/directory'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [30920] using statreload INFO: Started server process [30922] INFO: Waiting for application startup. INFO: Application startup complete. Note \u5f3a\u70c8\u63a8\u8350\u63d2\u4ef6\u4f5c\u8005\u7f16\u5199\u6d4b\u8bd5\uff0c\u4ee5\u786e\u4fdd\u4f60\u7684\u63d2\u4ef6\u80fd\u66f4\u9c81\u68d2\u3001\u6ca1\u6709\u9519\u8bef\u3002\u6d4b\u8bd5\u9700\u8981\u7f16\u5199\u5728 tests/ \u6587\u4ef6\u5939\u4e2d\uff0c\u5e76\u4f7f\u7528 pytest \u547d\u4ee4\u6765\u8fd0\u884c\u3002","title":"\u8fdb\u884c\u5f00\u53d1"},{"location":"zh/contribution/plugin/#\u53d1\u5e03\u63d2\u4ef6","text":"\u5f53\u4f60\u5728\u672c\u5730\u5bf9\u63d2\u4ef6\u8fdb\u884c\u4e86\u8db3\u591f\u591a\u7684\u6539\u52a8\u540e\uff0c\u8bf7\u786e\u4fdd\u4f60\u8bb2\u8fd9\u4e9b\u6539\u52a8\u63d0\u4ea4\uff08commit\uff09\u5e76\u63a8\u9001\uff08push\uff09\u5230 GitHub\u3002\u8fd9\u6837\u5b50\uff0c\u4f60\u63d2\u4ef6\u7684\u7528\u6237\u624d\u80fd\u4f7f\u7528\u5230\u4f60\u7684\u6700\u65b0\u5de5\u4f5c\u6210\u679c\u3002 git add --all git commit -m \"<type>: <description>\" git push origin Note \u63d0\u4ea4\u4fe1\u606f\uff08commit message\uff09\u5e94\u8be5\u9075\u5faa Conventional Commits \u89c4\u8303\u3002 \u5f53\u4f60\u8fd0\u884c git commit \u63d0\u4ea4\u65f6\uff0c\u4f60\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u7cfb\u5217 pre-commit \u94a9\u5b50\uff0c\u8fd9\u4e9b\u94a9\u5b50\u4f1a\u5bf9\u4f60\u7684\u4ee3\u7801\u7b49\u8fdb\u884c\u68c0\u67e5\u3002\u8bf7\u786e\u4fdd\u4f60\u5c06\u6539\u52a8\u63a8\u9001\u5230 GitHub \u524d\u5df2\u6210\u529f\u901a\u8fc7\u6240\u6709\u68c0\u67e5\u3002\u4f60\u4e5f\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u6765\u624b\u52a8\u8fdb\u884c\u68c0\u67e5\uff1a \u279c pre-commit run --all-files Nitpick Check............................................................Passed Fix End of Files.........................................................Passed Trim Trailing Whitespace.................................................Passed Check Blanket \"#noqa\"....................................................Passed Check Blanket \"#type:ignore\".............................................Passed Upgrade Python Syntax....................................................Passed Check Typos..............................................................Passed Format Source Code.......................................................Passed Sort Imports.............................................................Passed Type Check...............................................................Passed Lint.....................................................................Passed Note \u6211\u4eec\u5728 pre-commit \u94a9\u5b50\u4e2d\u8fd0\u884c\u4e86 black / isort \u4ee3\u7801\u683c\u5f0f\u5316, mypy \u7c7b\u578b\u68c0\u67e5\uff0c\u4ee5\u53ca flake8 \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u3002 \u6211\u4eec\u8fd8\u8fd0\u884c\u4e86 nitpick \u8fd9\u4e2a\u94a9\u5b50\uff1a\u5b83\u5305\u542b\u4e86\u4e00\u7cfb\u5217 RSSerpent \u5b98\u65b9\u63a8\u8350\u7684 black/isort/mypy/flake8 \u7b49\u5f00\u53d1\u5de5\u5177\u7684 \u914d\u7f6e \uff0c\u5e0c\u671b\u63d2\u4ef6\u5f00\u53d1\u8005\u80fd\u591f\u9075\u5b88\u3002 Warning \u5982\u679c\u4f60\u5728\u6267\u884c git commit \u65f6\uff0c\u6ca1\u6709\u89e6\u53d1\u4efb\u4f55 pre-commit \u94a9\u5b50\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u770b\u5230\u5982\u4e0a\u6807\u8bb0\u6709 Passed \u901a\u8fc7\u6216 Failed \u5931\u8d25\u7684\u82e5\u5e72\u884c\u68c0\u67e5\uff09\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c pre-commit install -t pre-commit -t commit-msg \u6765\u624b\u52a8\u5b89\u88c5 pre-commit \u94a9\u5b50\u3002","title":"\u53d1\u5e03\u63d2\u4ef6"},{"location":"zh/contribution/plugin/data/","text":"\u83b7\u53d6\u6570\u636e \u00b6 \u5f53\u4f60\u5728\u4e3a\u4f60\u7684\u63d2\u4ef6\u7f16\u5199\u6570\u636e\u63d0\u4f9b\u51fd\u6570\u65f6\uff0c\u4f60\u9700\u8981\u4ece\u67d0\u4e2a\u6e90\u7f51\u7ad9\u53bb\u83b7\u53d6\u6570\u636e\u3002RSSerpent \u63d0\u4f9b\u4e86\u4e00\u4e9b\u7b80\u5355\u6613\u7528\u7684\u8f85\u52a9\u51fd\u6570\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u5404\u79cd\u573a\u666f\u4e0b\u83b7\u53d6\u6570\u636e\u3002 HTTP \u00b6 \u4ece\u4e92\u8054\u7f51\u4e0a\u83b7\u53d6\u4fe1\u606f\u7684\u6700\u57fa\u672c\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 HTTP \u534f\u8bae\u3002 HTTPX \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5f02\u6b65 Python HTTP \u5e93\uff0c\u4e14\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent \u4ee5\u4fbf\u4f60\u80fd\u76f4\u63a5\u4f7f\u7528\u3002 \u6709\u4e9b\u65f6\u5019\uff0c\u6e90\u7f51\u7ad9\u76f4\u63a5\u63d0\u4f9b\u4e86\u53ef\u8bbf\u95ee\u7684 JSON API\u3002\u6240\u4ee5\u95ee\u9898\u5c31\u4f1a\u6bd4\u8f83\u7b80\u5355\uff1a from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) data = response . json () \u6ce8\u610f\u6b64\u5904 rsserpent.utils.HTTPClient \u662f httpx.AsyncClient \u7684\u5b50\u7c7b\u3002RSSerpent \u6269\u5c55\u51fa\u4e86\u8fd9\u4e2a\u5b50\u7c7b\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u53d1\u8d77 HTTP \u8bf7\u6c42\u65f6\u81ea\u52a8\u8bbe\u7f6e Host \u3001 Referer \u3001 User-Agent \u7b49\u5934\u90e8\u4fe1\u606f\u3002 HTML \u00b6 \u8fd8\u6709\u4e9b\u65f6\u5019\uff0c\u6e90\u7f51\u7ad9\u4e0d\u4f1a\u597d\u5fc3\u5730\u76f4\u63a5\u63d0\u4f9b JSON API\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u89e3\u6790\u7f51\u9875\u7684 HTML \u6e90\u4ee3\u7801\u6765\u83b7\u53d6\u6570\u636e\u3002 PyQuery \u662f\u4e00\u4e2a\u7c7b\u4f3c jQuery \u7684\u5e93\uff0c\u5b83\u80fd\u5e2e\u52a9\u4f60\u4ece\u7ed3\u6784\u5316\u7684 HTML \u6587\u6863\u4e2d\u63d0\u53d6\u6570\u636e\u3002PyQuery \u4e5f\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent \u4ee5\u4fbf\u4f60\u80fd\u76f4\u63a5\u4f7f\u7528\u3002 from pyquery import PyQuery from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) dom = PyQuery ( response . text ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () \u6a21\u62df\u6d4f\u89c8\u5668 \u00b6 \u5728\u66f4\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u6bd4 HTTP \u534f\u8bae\u66f4\u5f3a\u5927\u7684\u6b66\u5668\u3002\u8bb8\u591a\u73b0\u4ee3\u5316\u7684\u7f51\u7ad9\u90fd\u5927\u91cf\u7684\u4f7f\u7528 JavaScript\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u4f60\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u3001\u5e26\u6709 JavaScript \u5f15\u64ce\u7684\u6d4f\u89c8\u5668\u73af\u5883\u4e2d\u6253\u5f00\u7f51\u9875\uff0c\u4f60\u624d\u80fd\u770b\u5230\u7f51\u7ad9\u7684\u5185\u5bb9\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u5bf9\u4ed8\u8fd9\u79cd\u6e90\u7f51\u7ad9\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u6d4f\u89c8\u5668\u6a21\u62df\u3002 Playwright \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u4e14\u4e5f\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent\u3002RSSerpent \u5bf9 playwright \u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5305\u88c5\u4ee5\u65b9\u4fbf\u4f60\u4f7f\u7528\uff1a from pyquery import PyQuery from rsserpent.utils import Browser async with Browser () as browser : await browser . goto ( \"https://httpbin.org/html\" ) content = await browser . content () dom = PyQuery ( content ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () Warning \u6d4f\u89c8\u5668\u6a21\u62df\u5f88\u5f3a\u5927\uff0c\u4f46\u4e5f\u4f1a\u5927\u91cf\u6d88\u8017 CPU \u548c\u5185\u5b58\u8d44\u6e90\u3002\u6240\u4ee5\u8bf7\u4ec5\u5728\u5fc5\u8981\u65f6\u5c0f\u5fc3\u8c28\u614e\u5730\u4f7f\u7528\u6d4f\u89c8\u5668\u6a21\u62df\uff01","title":"\u83b7\u53d6\u6570\u636e"},{"location":"zh/contribution/plugin/data/#\u83b7\u53d6\u6570\u636e","text":"\u5f53\u4f60\u5728\u4e3a\u4f60\u7684\u63d2\u4ef6\u7f16\u5199\u6570\u636e\u63d0\u4f9b\u51fd\u6570\u65f6\uff0c\u4f60\u9700\u8981\u4ece\u67d0\u4e2a\u6e90\u7f51\u7ad9\u53bb\u83b7\u53d6\u6570\u636e\u3002RSSerpent \u63d0\u4f9b\u4e86\u4e00\u4e9b\u7b80\u5355\u6613\u7528\u7684\u8f85\u52a9\u51fd\u6570\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u5404\u79cd\u573a\u666f\u4e0b\u83b7\u53d6\u6570\u636e\u3002","title":"\u83b7\u53d6\u6570\u636e"},{"location":"zh/contribution/plugin/data/#http","text":"\u4ece\u4e92\u8054\u7f51\u4e0a\u83b7\u53d6\u4fe1\u606f\u7684\u6700\u57fa\u672c\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 HTTP \u534f\u8bae\u3002 HTTPX \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5f02\u6b65 Python HTTP \u5e93\uff0c\u4e14\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent \u4ee5\u4fbf\u4f60\u80fd\u76f4\u63a5\u4f7f\u7528\u3002 \u6709\u4e9b\u65f6\u5019\uff0c\u6e90\u7f51\u7ad9\u76f4\u63a5\u63d0\u4f9b\u4e86\u53ef\u8bbf\u95ee\u7684 JSON API\u3002\u6240\u4ee5\u95ee\u9898\u5c31\u4f1a\u6bd4\u8f83\u7b80\u5355\uff1a from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) data = response . json () \u6ce8\u610f\u6b64\u5904 rsserpent.utils.HTTPClient \u662f httpx.AsyncClient \u7684\u5b50\u7c7b\u3002RSSerpent \u6269\u5c55\u51fa\u4e86\u8fd9\u4e2a\u5b50\u7c7b\uff0c\u6765\u5e2e\u52a9\u4f60\u5728\u53d1\u8d77 HTTP \u8bf7\u6c42\u65f6\u81ea\u52a8\u8bbe\u7f6e Host \u3001 Referer \u3001 User-Agent \u7b49\u5934\u90e8\u4fe1\u606f\u3002","title":"HTTP"},{"location":"zh/contribution/plugin/data/#html","text":"\u8fd8\u6709\u4e9b\u65f6\u5019\uff0c\u6e90\u7f51\u7ad9\u4e0d\u4f1a\u597d\u5fc3\u5730\u76f4\u63a5\u63d0\u4f9b JSON API\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u89e3\u6790\u7f51\u9875\u7684 HTML \u6e90\u4ee3\u7801\u6765\u83b7\u53d6\u6570\u636e\u3002 PyQuery \u662f\u4e00\u4e2a\u7c7b\u4f3c jQuery \u7684\u5e93\uff0c\u5b83\u80fd\u5e2e\u52a9\u4f60\u4ece\u7ed3\u6784\u5316\u7684 HTML \u6587\u6863\u4e2d\u63d0\u53d6\u6570\u636e\u3002PyQuery \u4e5f\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent \u4ee5\u4fbf\u4f60\u80fd\u76f4\u63a5\u4f7f\u7528\u3002 from pyquery import PyQuery from rsserpent.utils import HTTPClient async with HTTPClient () as client : response = await client . get ( \"https://httpbin.org/json\" ) dom = PyQuery ( response . text ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text ()","title":"HTML"},{"location":"zh/contribution/plugin/data/#\u6a21\u62df\u6d4f\u89c8\u5668","text":"\u5728\u66f4\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u9700\u8981\u6bd4 HTTP \u534f\u8bae\u66f4\u5f3a\u5927\u7684\u6b66\u5668\u3002\u8bb8\u591a\u73b0\u4ee3\u5316\u7684\u7f51\u7ad9\u90fd\u5927\u91cf\u7684\u4f7f\u7528 JavaScript\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u4f60\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u3001\u5e26\u6709 JavaScript \u5f15\u64ce\u7684\u6d4f\u89c8\u5668\u73af\u5883\u4e2d\u6253\u5f00\u7f51\u9875\uff0c\u4f60\u624d\u80fd\u770b\u5230\u7f51\u7ad9\u7684\u5185\u5bb9\u88ab\u6e32\u67d3\u51fa\u6765\u3002\u5bf9\u4ed8\u8fd9\u79cd\u6e90\u7f51\u7ad9\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u6d4f\u89c8\u5668\u6a21\u62df\u3002 Playwright \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u4e14\u4e5f\u9ed8\u8ba4\u88ab\u7f6e\u5165 RSSerpent\u3002RSSerpent \u5bf9 playwright \u505a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5305\u88c5\u4ee5\u65b9\u4fbf\u4f60\u4f7f\u7528\uff1a from pyquery import PyQuery from rsserpent.utils import Browser async with Browser () as browser : await browser . goto ( \"https://httpbin.org/html\" ) content = await browser . content () dom = PyQuery ( content ) title = dom ( \"h1\" ) . text () description = dom ( \"div > p\" ) . text () Warning \u6d4f\u89c8\u5668\u6a21\u62df\u5f88\u5f3a\u5927\uff0c\u4f46\u4e5f\u4f1a\u5927\u91cf\u6d88\u8017 CPU \u548c\u5185\u5b58\u8d44\u6e90\u3002\u6240\u4ee5\u8bf7\u4ec5\u5728\u5fc5\u8981\u65f6\u5c0f\u5fc3\u8c28\u614e\u5730\u4f7f\u7528\u6d4f\u89c8\u5668\u6a21\u62df\uff01","title":"\u6a21\u62df\u6d4f\u89c8\u5668"},{"location":"zh/deployment/","text":"\u81ea\u5efa \u00b6 \u6211\u4eec\u9f13\u52b1\u4f60\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002 Note \u5b9e\u4f8b\u662f\u6307\u4e00\u4efd\u6b63\u5728\u8fd0\u884c\u4e2d\u7684 RSSerpent \u8f6f\u4ef6\u4f53\u3002 \u81ea\u5efa\u65e2\u4e0d\u590d\u6742\u4e5f\u4e0d\u56f0\u96be\uff0c\u4f60\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u8ba1\u7b97\u673a\u7f16\u7a0b\u7ecf\u9a8c\u5373\u53ef\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002\u6587\u6863\u63d0\u4f9b\u4e86\u82e5\u5e72\u6613\u5b66\u6613\u61c2\u7684\u81ea\u5efa\u6559\u7a0b\u4f9b\u4f60\u53c2\u8003\uff1a [\u4f7f\u7528 Deta \u90e8\u7f72] [\u4f7f\u7528 Heroku \u90e8\u7f72] [\u4f7f\u7528 Vercel \u90e8\u7f72] \u5b98\u65b9\u5b9e\u4f8b \u00b6 RSSerpent \u5b98\u65b9\u90e8\u7f72\u4e86\u4e00\u4e9b\u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u786e\u8ba4\u81ea\u5efa\u5e76\u4e0d\u9002\u5408\u4f60\u81ea\u5df1\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4ee5\u4e0b\u4e4b\u4e00\uff1a https://www.rsserpent.com , \u90e8\u7f72\u5728 vercel.com [ source ]\uff1b https://rsserpent.deta.dev , \u90e8\u7f72\u5728 deta.sh [ source ]\uff1b https://rsserpent.herokuapp.com , \u90e8\u7f72\u5728 heroku.com [ source ]\uff1b","title":"\u81ea\u5efa"},{"location":"zh/deployment/#\u81ea\u5efa","text":"\u6211\u4eec\u9f13\u52b1\u4f60\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002 Note \u5b9e\u4f8b\u662f\u6307\u4e00\u4efd\u6b63\u5728\u8fd0\u884c\u4e2d\u7684 RSSerpent \u8f6f\u4ef6\u4f53\u3002 \u81ea\u5efa\u65e2\u4e0d\u590d\u6742\u4e5f\u4e0d\u56f0\u96be\uff0c\u4f60\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u8ba1\u7b97\u673a\u7f16\u7a0b\u7ecf\u9a8c\u5373\u53ef\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u3002\u6587\u6863\u63d0\u4f9b\u4e86\u82e5\u5e72\u6613\u5b66\u6613\u61c2\u7684\u81ea\u5efa\u6559\u7a0b\u4f9b\u4f60\u53c2\u8003\uff1a [\u4f7f\u7528 Deta \u90e8\u7f72] [\u4f7f\u7528 Heroku \u90e8\u7f72] [\u4f7f\u7528 Vercel \u90e8\u7f72]","title":"\u81ea\u5efa"},{"location":"zh/deployment/#\u5b98\u65b9\u5b9e\u4f8b","text":"RSSerpent \u5b98\u65b9\u90e8\u7f72\u4e86\u4e00\u4e9b\u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u786e\u8ba4\u81ea\u5efa\u5e76\u4e0d\u9002\u5408\u4f60\u81ea\u5df1\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4ee5\u4e0b\u4e4b\u4e00\uff1a https://www.rsserpent.com , \u90e8\u7f72\u5728 vercel.com [ source ]\uff1b https://rsserpent.deta.dev , \u90e8\u7f72\u5728 deta.sh [ source ]\uff1b https://rsserpent.herokuapp.com , \u90e8\u7f72\u5728 heroku.com [ source ]\uff1b","title":"\u5b98\u65b9\u5b9e\u4f8b"},{"location":"zh/deployment/deta/","text":"\u4f7f\u7528 Deta \u90e8\u7f72 \u00b6 \u672c\u6559\u7a0b\u5c06\u5e2e\u52a9\u4f60\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 Deta \u514d\u8d39\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002 \u8bbf\u95ee\u4ee4\u724c \u00b6 \u4f60\u9996\u5148\u9700\u8981\u6ce8\u518c Deta \u8d26\u6237\u624d\u80fd\u8fdb\u884c\u90e8\u7f72\uff0c\u6d4f\u89c8\u5668\u6253\u5f00 https://web.deta.sh \u8fdb\u884c\u6ce8\u518c\u3002 \u6210\u529f\u6ce8\u518c\u5e76\u767b\u5f55\u540e\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a Deta \u8bbf\u95ee\u4ee4\u724c \uff08access token\uff09\uff0c\u7136\u540e RSSerpent \u4f1a\u5e2e\u52a9\u4f60\u5b8c\u6210\u5269\u4e0b\u7684\u4e8b\u3002 \u6253\u5f00\u4f60\u7684\u4e2a\u4eba\u4e3b\u9875 https://web.deta.sh/home/{username}/ \uff1b \u70b9\u51fb Settings \u6807\u7b7e\u9875\u8fdb\u5165\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb Create Token \u6309\u94ae\u521b\u5efa\u4ee4\u724c\uff1b \u5c06\u751f\u6210\u7684\u8bbf\u95ee\u4ee4\u724c\u62f7\u8d1d\u5230\u4f60\u7684\u526a\u8d34\u677f\u3002 \u5982\u679c\u4f60\u5bf9\u8bbf\u95ee\u4ee4\u724c\u6709\u4efb\u4f55\u7591\u8651\uff0c\u8bf7\u9605\u8bfb Deta \u7684 \u6587\u6863 \u3002 \u4f7f\u7528\u6a21\u677f \u00b6 RSSerpent \u4e3a\u7528\u6237\u63d0\u4f9b\u4e86 Deta \u90e8\u7f72\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a21\u677f\u5feb\u901f\u5b8c\u6210\u90e8\u7f72\u3002\u5047\u8bbe\u4f60\u5df2\u7ecf\u5f00\u901a GitHub \u8d26\u6237\uff1a \u5728 GitHub \u4e0a\u6253\u5f00 \u6a21\u677f \uff1b \u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002 GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002 \u6253\u5f00\u4f60\u4ed3\u5e93\u7684 Settings \u8bbe\u7f6e\u6807\u7b7e\u9875\uff1b \u627e\u5230 Secrets \uff0c\u70b9\u51fb New repository secret \u6309\u94ae\u65b0\u5efa\u5bc6\u94a5; \u5bc6\u94a5\u540d\u5b57\u4e3a DETA_TOKEN \uff0c\u5bc6\u94a5\u5185\u5bb9\u5c31\u662f\u4f60\u521a\u624d\u521b\u5efa\u7684 Deta \u8bbf\u95ee\u4ee4\u724c\u3002 GitHub \u4f1a\u4f7f\u7528\u4f60\u7684\u8bbf\u95ee\u4ee4\u724c\u6765\u5c06\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u81ea\u52a8\u90e8\u7f72\u5230 Deta \u4e0a\u3002 \u6210\u529f\u8fd0\u884c \ud83c\udf89 \u00b6 \u5728\u4f60\u7684\u4ee3\u7801\u4ed3\u5e93\u7684 Actions \u6807\u7b7e\u9875\u4e0b\uff0c\u627e\u5230 Update \u5de5\u4f5c\u6d41\uff0c\u70b9\u51fb Run workflow \u6309\u94ae\u6765\u624b\u52a8\u8fdb\u884c\u7b2c\u4e00\u6b21\u90e8\u7f72\uff1b \u6253\u5f00 deta.sh \uff0c\u5728 default \u9879\u76ee\u7684 Micros \u5217\u8868\u4e2d\uff0c\u9009\u62e9 rsserpent \uff0c\u4f60\u80fd\u5728\u9875\u9762\u53f3\u4e0a\u89d2\u770b\u5230\u4f60\u5b9e\u4f8b\u7684\u7f51\u7ad9\u5730\u5740\uff08\u7c7b\u4f3c https://xxxxxx.deta.dev/ \uff09\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8be5\u7f51\u5740\u3002\u5982\u679c\u4f60\u770b\u5230 \u201c Welcome to RSSerpent! \u201d \u8fd9\u4e2a\u6b22\u8fce\u4fe1\u606f\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01 \u5176\u4ed6\u4e8b\u9879 \u00b6 \u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Deta \u6587\u6863 \u3002","title":"\u4f7f\u7528 Deta \u90e8\u7f72"},{"location":"zh/deployment/deta/#\u4f7f\u7528-deta-\u90e8\u7f72","text":"\u672c\u6559\u7a0b\u5c06\u5e2e\u52a9\u4f60\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 Deta \u514d\u8d39\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002","title":"\u4f7f\u7528 Deta \u90e8\u7f72"},{"location":"zh/deployment/deta/#\u8bbf\u95ee\u4ee4\u724c","text":"\u4f60\u9996\u5148\u9700\u8981\u6ce8\u518c Deta \u8d26\u6237\u624d\u80fd\u8fdb\u884c\u90e8\u7f72\uff0c\u6d4f\u89c8\u5668\u6253\u5f00 https://web.deta.sh \u8fdb\u884c\u6ce8\u518c\u3002 \u6210\u529f\u6ce8\u518c\u5e76\u767b\u5f55\u540e\uff0c\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a Deta \u8bbf\u95ee\u4ee4\u724c \uff08access token\uff09\uff0c\u7136\u540e RSSerpent \u4f1a\u5e2e\u52a9\u4f60\u5b8c\u6210\u5269\u4e0b\u7684\u4e8b\u3002 \u6253\u5f00\u4f60\u7684\u4e2a\u4eba\u4e3b\u9875 https://web.deta.sh/home/{username}/ \uff1b \u70b9\u51fb Settings \u6807\u7b7e\u9875\u8fdb\u5165\u8bbe\u7f6e\uff0c\u7136\u540e\u70b9\u51fb Create Token \u6309\u94ae\u521b\u5efa\u4ee4\u724c\uff1b \u5c06\u751f\u6210\u7684\u8bbf\u95ee\u4ee4\u724c\u62f7\u8d1d\u5230\u4f60\u7684\u526a\u8d34\u677f\u3002 \u5982\u679c\u4f60\u5bf9\u8bbf\u95ee\u4ee4\u724c\u6709\u4efb\u4f55\u7591\u8651\uff0c\u8bf7\u9605\u8bfb Deta \u7684 \u6587\u6863 \u3002","title":"\u8bbf\u95ee\u4ee4\u724c"},{"location":"zh/deployment/deta/#\u4f7f\u7528\u6a21\u677f","text":"RSSerpent \u4e3a\u7528\u6237\u63d0\u4f9b\u4e86 Deta \u90e8\u7f72\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u7528\u6a21\u677f\u5feb\u901f\u5b8c\u6210\u90e8\u7f72\u3002\u5047\u8bbe\u4f60\u5df2\u7ecf\u5f00\u901a GitHub \u8d26\u6237\uff1a \u5728 GitHub \u4e0a\u6253\u5f00 \u6a21\u677f \uff1b \u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002 GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002 \u6253\u5f00\u4f60\u4ed3\u5e93\u7684 Settings \u8bbe\u7f6e\u6807\u7b7e\u9875\uff1b \u627e\u5230 Secrets \uff0c\u70b9\u51fb New repository secret \u6309\u94ae\u65b0\u5efa\u5bc6\u94a5; \u5bc6\u94a5\u540d\u5b57\u4e3a DETA_TOKEN \uff0c\u5bc6\u94a5\u5185\u5bb9\u5c31\u662f\u4f60\u521a\u624d\u521b\u5efa\u7684 Deta \u8bbf\u95ee\u4ee4\u724c\u3002 GitHub \u4f1a\u4f7f\u7528\u4f60\u7684\u8bbf\u95ee\u4ee4\u724c\u6765\u5c06\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u81ea\u52a8\u90e8\u7f72\u5230 Deta \u4e0a\u3002","title":"\u4f7f\u7528\u6a21\u677f"},{"location":"zh/deployment/deta/#\u6210\u529f\u8fd0\u884c-","text":"\u5728\u4f60\u7684\u4ee3\u7801\u4ed3\u5e93\u7684 Actions \u6807\u7b7e\u9875\u4e0b\uff0c\u627e\u5230 Update \u5de5\u4f5c\u6d41\uff0c\u70b9\u51fb Run workflow \u6309\u94ae\u6765\u624b\u52a8\u8fdb\u884c\u7b2c\u4e00\u6b21\u90e8\u7f72\uff1b \u6253\u5f00 deta.sh \uff0c\u5728 default \u9879\u76ee\u7684 Micros \u5217\u8868\u4e2d\uff0c\u9009\u62e9 rsserpent \uff0c\u4f60\u80fd\u5728\u9875\u9762\u53f3\u4e0a\u89d2\u770b\u5230\u4f60\u5b9e\u4f8b\u7684\u7f51\u7ad9\u5730\u5740\uff08\u7c7b\u4f3c https://xxxxxx.deta.dev/ \uff09\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8be5\u7f51\u5740\u3002\u5982\u679c\u4f60\u770b\u5230 \u201c Welcome to RSSerpent! \u201d \u8fd9\u4e2a\u6b22\u8fce\u4fe1\u606f\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01","title":"\u6210\u529f\u8fd0\u884c \ud83c\udf89"},{"location":"zh/deployment/deta/#\u5176\u4ed6\u4e8b\u9879","text":"\u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Deta \u6587\u6863 \u3002","title":"\u5176\u4ed6\u4e8b\u9879"},{"location":"zh/deployment/heroku/","text":"\u4f7f\u7528 Heroku \u90e8\u7f72 \u00b6 \u5728 Heroku \u4e0a\u90e8\u7f72 RSSerpent \u5b9e\u4f8b\u5b8c\u5168\u514d\u8d39\u3001\u4e14\u975e\u5e38\u7b80\u5355\uff01\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4f60\u5df2\u62e5\u6709 GitHub \u548c Heroku \u8d26\u53f7\u3002 \u4f7f\u7528\u6a21\u677f \u00b6 \u5728 GitHub \u4e0a\u6253\u5f00 RSSerpent Heroku \u90e8\u7f72 \u6a21\u677f \uff0c\u7136\u540e\u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002 \u6210\u529f\u8fd0\u884c \ud83c\udf89 \u00b6 \u6210\u529f\u521b\u5efa\u4ee3\u7801\u4ed3\u5e93\u540e\uff0c\u6253\u5f00\u4f60\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u70b9\u51fb \u6309\u94ae\u90e8\u7f72\u5230 Heroku\u3002\u4f60\u9700\u8981\u586b\u5199\u4f60\u7684 Heroku app \u540d\u5b57\uff0c\u7136\u540e\u7a0d\u7b49\u6570\u5206\u949f\uff0c\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u5c31\u4f1a\u6210\u529f\u8fd0\u884c\uff01 \u6210\u529f\u90e8\u7f72 Heroku app \u540e\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u7684 Open app \u6309\u94ae\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u770b\u5230 \u201c Welcome to RSSerpent! \u201d \u8fd9\u4e2a\u6b22\u8fce\u4fe1\u606f\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01 \u5176\u4ed6\u4e8b\u9879 \u00b6 \u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Heroku \u6587\u6863 \u3002","title":"\u4f7f\u7528 Heroku \u90e8\u7f72"},{"location":"zh/deployment/heroku/#\u4f7f\u7528-heroku-\u90e8\u7f72","text":"\u5728 Heroku \u4e0a\u90e8\u7f72 RSSerpent \u5b9e\u4f8b\u5b8c\u5168\u514d\u8d39\u3001\u4e14\u975e\u5e38\u7b80\u5355\uff01\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4f60\u5df2\u62e5\u6709 GitHub \u548c Heroku \u8d26\u53f7\u3002","title":"\u4f7f\u7528 Heroku \u90e8\u7f72"},{"location":"zh/deployment/heroku/#\u4f7f\u7528\u6a21\u677f","text":"\u5728 GitHub \u4e0a\u6253\u5f00 RSSerpent Heroku \u90e8\u7f72 \u6a21\u677f \uff0c\u7136\u540e\u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002","title":"\u4f7f\u7528\u6a21\u677f"},{"location":"zh/deployment/heroku/#\u6210\u529f\u8fd0\u884c-","text":"\u6210\u529f\u521b\u5efa\u4ee3\u7801\u4ed3\u5e93\u540e\uff0c\u6253\u5f00\u4f60\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u70b9\u51fb \u6309\u94ae\u90e8\u7f72\u5230 Heroku\u3002\u4f60\u9700\u8981\u586b\u5199\u4f60\u7684 Heroku app \u540d\u5b57\uff0c\u7136\u540e\u7a0d\u7b49\u6570\u5206\u949f\uff0c\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u5c31\u4f1a\u6210\u529f\u8fd0\u884c\uff01 \u6210\u529f\u90e8\u7f72 Heroku app \u540e\uff0c\u70b9\u51fb\u9875\u9762\u53f3\u4e0a\u89d2\u7684 Open app \u6309\u94ae\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u3002\u5982\u679c\u4f60\u770b\u5230 \u201c Welcome to RSSerpent! \u201d \u8fd9\u4e2a\u6b22\u8fce\u4fe1\u606f\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01","title":"\u6210\u529f\u8fd0\u884c \ud83c\udf89"},{"location":"zh/deployment/heroku/#\u5176\u4ed6\u4e8b\u9879","text":"\u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Heroku \u6587\u6863 \u3002","title":"\u5176\u4ed6\u4e8b\u9879"},{"location":"zh/deployment/plugin/","text":"\u5b89\u88c5\u63d2\u4ef6 \u00b6 Warning \u6ce8\u610f\u4e0d\u8981\u6df7\u6dc6 rsserpent.txt \u548c requirements.txt \u3002 \u9ed8\u8ba4\u7684\u6a21\u677f\u529f\u80fd\u5e76\u4e0d\u4e30\u5bcc\uff0c\u4f60\u9700\u8981\u5c06\u6dfb\u52a0\u4f60\u9700\u8981\u7684 RSSerpent \u63d2\u4ef6\u5230 rsserpent.txt \u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 git \u5c06\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u4ee5\u7f16\u8f91 rsserpent.txt \uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 GitHub \u7f51\u9875\u8fdb\u884c\u7f16\u8f91\u3002 \u7f16\u5199 rsserpent.txt \u65f6\u7684\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff1a \u7f16\u5199 rsserpent.txt \u548c\u4e3a\u4efb\u4f55 Python \u9879\u76ee\u7f16\u5199 requirements.txt \u662f\u4e00\u6837\u7684\uff1b \u4e0d\u8981\u4fee\u6539 requirements.txt \uff0c\u4f60\u53ea\u5e94\u8be5\u4fee\u6539 rsserpent.txt \u3002GitHub Actions \u4f1a\u8d1f\u8d23\u81ea\u52a8\u66f4\u65b0\u4f60\u7684 requirements.txt \u5e76\u90e8\u7f72\u5b9e\u4f8b\uff1b \u6bcf\u5468\u4e00\u6b21\uff0c\u6216\u8005\u6bcf\u6b21\u4f60\u4fee\u6539\u4ed3\u5e93\u5185\u5bb9\u5e76\u63d0\u4ea4\u65f6\uff0c\u4f1a\u8fdb\u884c\u81ea\u52a8\u66f4\u65b0/\u90e8\u7f72\uff1b \u6211\u4eec\u63a8\u8350\u4f60\u5728 rsserpent.txt \u4e2d\u4e0d\u8981\u6307\u5b9a\u4efb\u4f55\u7248\u672c\uff0c\u8fd9\u6837 GitHub Actions \u80fd\u5e2e\u52a9\u4f60\u81ea\u52a8\u5c06\u4f9d\u8d56\u66f4\u65b0\u5230\u6700\u65b0\u7248\uff1b # PyPI rsserpent # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git \u5982\u679c\u4f60\u786e\u8ba4\u4f60\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u7279\u5b9a\u7248\u672c\uff08\u800c\u975e\u6700\u65b0\uff09\u7684\u4f9d\u8d56\uff0c\u4f60\u53ef\u4ee5\uff1a # PyPI rsserpent == 0.1.4 # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git @ 0609 c0bd466e5d19fbb13078d9b93e0134b8c5bd","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"zh/deployment/plugin/#\u5b89\u88c5\u63d2\u4ef6","text":"Warning \u6ce8\u610f\u4e0d\u8981\u6df7\u6dc6 rsserpent.txt \u548c requirements.txt \u3002 \u9ed8\u8ba4\u7684\u6a21\u677f\u529f\u80fd\u5e76\u4e0d\u4e30\u5bcc\uff0c\u4f60\u9700\u8981\u5c06\u6dfb\u52a0\u4f60\u9700\u8981\u7684 RSSerpent \u63d2\u4ef6\u5230 rsserpent.txt \u6587\u4ef6\u4e2d\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 git \u5c06\u4ed3\u5e93\u514b\u9686\u5230\u672c\u5730\u4ee5\u7f16\u8f91 rsserpent.txt \uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 GitHub \u7f51\u9875\u8fdb\u884c\u7f16\u8f91\u3002 \u7f16\u5199 rsserpent.txt \u65f6\u7684\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff1a \u7f16\u5199 rsserpent.txt \u548c\u4e3a\u4efb\u4f55 Python \u9879\u76ee\u7f16\u5199 requirements.txt \u662f\u4e00\u6837\u7684\uff1b \u4e0d\u8981\u4fee\u6539 requirements.txt \uff0c\u4f60\u53ea\u5e94\u8be5\u4fee\u6539 rsserpent.txt \u3002GitHub Actions \u4f1a\u8d1f\u8d23\u81ea\u52a8\u66f4\u65b0\u4f60\u7684 requirements.txt \u5e76\u90e8\u7f72\u5b9e\u4f8b\uff1b \u6bcf\u5468\u4e00\u6b21\uff0c\u6216\u8005\u6bcf\u6b21\u4f60\u4fee\u6539\u4ed3\u5e93\u5185\u5bb9\u5e76\u63d0\u4ea4\u65f6\uff0c\u4f1a\u8fdb\u884c\u81ea\u52a8\u66f4\u65b0/\u90e8\u7f72\uff1b \u6211\u4eec\u63a8\u8350\u4f60\u5728 rsserpent.txt \u4e2d\u4e0d\u8981\u6307\u5b9a\u4efb\u4f55\u7248\u672c\uff0c\u8fd9\u6837 GitHub Actions \u80fd\u5e2e\u52a9\u4f60\u81ea\u52a8\u5c06\u4f9d\u8d56\u66f4\u65b0\u5230\u6700\u65b0\u7248\uff1b # PyPI rsserpent # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git \u5982\u679c\u4f60\u786e\u8ba4\u4f60\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u7279\u5b9a\u7248\u672c\uff08\u800c\u975e\u6700\u65b0\uff09\u7684\u4f9d\u8d56\uff0c\u4f60\u53ef\u4ee5\uff1a # PyPI rsserpent == 0.1.4 # Git rsserpent - plugin - bilibili @ git + https : // github . com / RSSerpent / rsserpent - plugin - bilibili . git @ 0609 c0bd466e5d19fbb13078d9b93e0134b8c5bd","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"zh/deployment/vercel/","text":"\u4f7f\u7528 Vercel \u90e8\u7f72 \u00b6 \u672c\u6559\u7a0b\u5c06\u5e2e\u52a9\u4f60\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 Vercel \u514d\u8d39\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002 \u4f7f\u7528\u6a21\u677f \u00b6 \u5728 GitHub \u4e0a\u6253\u5f00 RSSerpent Vercel \u90e8\u7f72 \u6a21\u677f \uff0c\u7136\u540e\u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002 \u90e8\u7f72\u9879\u76ee \u00b6 \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6b64 \u94fe\u63a5 \uff0c\u9009\u62e9 Continue with GitHub \u3002Vercel \u4f1a\u63d0\u793a\u4f60\u6388\u6743\u4f7f\u7528\u4f60\u7684 GitHub \u8d26\u6237\u767b\u9646 Vercel\u3002\u767b\u5f55\u6210\u529f\u540e\uff0cVercel \u4f1a\u6307\u5f15\u4f60\u5bfc\u5165 GitHub \u4ee3\u7801\u4ed3\u5e93\u8fdb\u884c\u90e8\u7f72\u3002\u4f60\u9700\u8981\u627e\u5230\u4f60\u521a\u521a\u521b\u5efa\u7684\u3001\u540d\u4e3a rsserpent-deploy-vercel \u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u5e76\u70b9\u51fb\u5176\u53f3\u4fa7\u7684 \u6309\u94ae\u3002 \u73b0\u5728\uff0cVercel \u4f1a\u63d0\u793a\u4f60\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\u3002\u4e0d\u8fc7\u597d\u6d88\u606f\u662f\uff0c\u4f60\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\uff01\u70b9\u51fb Deploy \uff0c\u7b49\u5f85\u6570\u5206\u949f\uff0c\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u5c31\u4f1a\u88ab\u6210\u529f\u90e8\u7f72\u3002 \u6210\u529f\u8fd0\u884c \ud83c\udf89 \u00b6 \u5982\u679c\u4f60\u89c1\u5230\u5982\u4e0b\u754c\u9762\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01\u70b9\u51fb\u9875\u9762\u4e2d\u95f4\u7684\u7f51\u7ad9\u7f29\u7565\u56fe\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u3002 \u5176\u4ed6\u4e8b\u9879 \u00b6 \u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Vercel \u6587\u6863 \u3002","title":"\u4f7f\u7528 Vercel \u90e8\u7f72"},{"location":"zh/deployment/vercel/#\u4f7f\u7528-vercel-\u90e8\u7f72","text":"\u672c\u6559\u7a0b\u5c06\u5e2e\u52a9\u4f60\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 Vercel \u514d\u8d39\u81ea\u5efa RSSerpent \u5b9e\u4f8b\u3002","title":"\u4f7f\u7528 Vercel \u90e8\u7f72"},{"location":"zh/deployment/vercel/#\u4f7f\u7528\u6a21\u677f","text":"\u5728 GitHub \u4e0a\u6253\u5f00 RSSerpent Vercel \u90e8\u7f72 \u6a21\u677f \uff0c\u7136\u540e\u70b9\u51fb \u6309\u94ae\u4f7f\u7528\u6a21\u677f\u3002GitHub \u4f1a\u63d0\u793a\u4f60\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5c31\u4f1a\u57fa\u4e8e\u6a21\u677f\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u3002","title":"\u4f7f\u7528\u6a21\u677f"},{"location":"zh/deployment/vercel/#\u90e8\u7f72\u9879\u76ee","text":"\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6b64 \u94fe\u63a5 \uff0c\u9009\u62e9 Continue with GitHub \u3002Vercel \u4f1a\u63d0\u793a\u4f60\u6388\u6743\u4f7f\u7528\u4f60\u7684 GitHub \u8d26\u6237\u767b\u9646 Vercel\u3002\u767b\u5f55\u6210\u529f\u540e\uff0cVercel \u4f1a\u6307\u5f15\u4f60\u5bfc\u5165 GitHub \u4ee3\u7801\u4ed3\u5e93\u8fdb\u884c\u90e8\u7f72\u3002\u4f60\u9700\u8981\u627e\u5230\u4f60\u521a\u521a\u521b\u5efa\u7684\u3001\u540d\u4e3a rsserpent-deploy-vercel \u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u5e76\u70b9\u51fb\u5176\u53f3\u4fa7\u7684 \u6309\u94ae\u3002 \u73b0\u5728\uff0cVercel \u4f1a\u63d0\u793a\u4f60\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\u3002\u4e0d\u8fc7\u597d\u6d88\u606f\u662f\uff0c\u4f60\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u914d\u7f6e\uff01\u70b9\u51fb Deploy \uff0c\u7b49\u5f85\u6570\u5206\u949f\uff0c\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u5c31\u4f1a\u88ab\u6210\u529f\u90e8\u7f72\u3002","title":"\u90e8\u7f72\u9879\u76ee"},{"location":"zh/deployment/vercel/#\u6210\u529f\u8fd0\u884c-","text":"\u5982\u679c\u4f60\u89c1\u5230\u5982\u4e0b\u754c\u9762\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u4f60\u5df2\u7ecf\u90e8\u7f72\u6210\u529f\u4e86\uff01\u70b9\u51fb\u9875\u9762\u4e2d\u95f4\u7684\u7f51\u7ad9\u7f29\u7565\u56fe\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4f60\u7684 RSSerpent \u5b9e\u4f8b\u3002","title":"\u6210\u529f\u8fd0\u884c \ud83c\udf89"},{"location":"zh/deployment/vercel/#\u5176\u4ed6\u4e8b\u9879","text":"\u5982\u679c\u4f60\u9700\u8981\u65b0\u589e RSSerpent \u63d2\u4ef6\uff0c\u8bf7\u9605\u8bfb [\u5b89\u88c5\u63d2\u4ef6] \u3002 \u5982\u679c\u4f60\u9700\u8981\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u8bf7\u9605\u8bfb Vercel \u6587\u6863 \u3002","title":"\u5176\u4ed6\u4e8b\u9879"},{"location":"zh/plugin/","text":"\u5b98\u65b9 \u00b6","title":"\u5b98\u65b9"},{"location":"zh/plugin/#\u5b98\u65b9","text":"","title":"\u5b98\u65b9"},{"location":"zh/usage/","text":"\u8ba4\u8bc6 RSS \u00b6 Note \u5728\u4f7f\u7528 RSSerpent \u524d\uff0c\u4f60\u9996\u5148\u9700\u8981\u5bf9 RSS \u6709\u8db3\u591f\u7684\u8ba4\u77e5\u3002\u5982\u679c\u4f60\u76f8\u4fe1\u81ea\u5df1\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u8df3\u8fc7\u672c\u7ae0\u8282\u3002 \u4ec0\u4e48\u662f RSS \u00b6 RSS \u662f Really Simple Syndication \u7684\u7f29\u5199\uff0c\u4e2d\u6587\u8bd1\u4f5c\u201c\u7b80\u6613\u4fe1\u606f\u805a\u5408\u201d\u3002RSS \u662f\u4e00\u79cd\u4e92\u8054\u7f51\u6d88\u606f\u6765\u6e90\u7684\u683c\u5f0f\u3002\u5176\u4ed6\u5e38\u89c1\u7684\u6d88\u606f\u6765\u6e90\u683c\u5f0f\u8fd8\u5305\u62ec Atom \u3001 JSON Feed \u7b49\u3002\u4f5c\u4e3a\u6700\u65e9\u51fa\u73b0\u4e5f\u6700\u6d41\u884c\u7684\u6d88\u606f\u6765\u6e90\u683c\u5f0f\uff0cRSS \u4e5f\u5e38\u88ab\u7528\u4f5c RSS\u3001Atom \u7b49\u6d88\u606f\u6765\u6e90\u683c\u5f0f\u7684\u7edf\u79f0\u3002 \u4f5c\u4e3a\u4e00\u79cd\u6d88\u606f\u6765\u6e90\u7684\u683c\u5f0f\uff0cRSS \u80fd\u591f\u5411\u7528\u6237\u63a8\u9001\u7f51\u7edc\u4e0a\u4e00\u4e9b\u9891\u7e41\u66f4\u65b0\u7684\u5185\u5bb9 \u2014\u2014 \u5176\u4e2d\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u5c31\u662f \u65b0\u95fb \u3002\u65f6\u81f3\u4eca\u65e5\uff0c\u8bb8\u591a\u65b0\u95fb\u53d1\u5e03\u8005\u90fd\u4ecd\u5728\u901a\u8fc7 RSS \u53d1\u5e03\u65b0\u95fb\uff0c\u4f8b\u5982 BBC News\u3001The Guardian \u7b49\u3002 \u4e3a\u4ec0\u4e48\u9009\u62e9 RSS \u00b6 RSS \u5bf9\u4e8e\u5185\u5bb9\u9605\u8bfb\u8005\u6765\u8bf4\u662f\u65b9\u4fbf\u7684\u3002\u901a\u8fc7\u8ba2\u9605 RSS\uff0c\u4f60\u53ef\u4ee5\u5c06\u591a\u4e2a\u6765\u6e90\u7684\u4fe1\u606f\u805a\u5408\u5728\u4e00\u5904\u6d4f\u89c8\uff0c\u8fd9\u6837\u5c31\u514d\u53bb\u4e86\u4f60\u5728\u83b7\u53d6\u4fe1\u606f\u65f6\u4e0d\u5f97\u4e0d\u6253\u5f00\u591a\u4e2a\u7f51\u9875/\u5e94\u7528\u9010\u4e00\u67e5\u770b\u7684\u9ebb\u70e6\u3002\u66f4\u68d2\u7684\u662f\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u5bf9\u805a\u5408\u4fe1\u606f\u4f5c\u8fc7\u6ee4\u3001\u7b5b\u9009\u3001\u6392\u5e8f\uff0c\u4ece\u4e2d\u6311\u9009\u51fa\u6700\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4ee5\u8282\u7701\u4f60\u5b9d\u8d35\u7684\u65f6\u95f4\u3002\u8bb8\u591a RSS \u8fd8\u4f1a\u5c06\u76f8\u5173\u5185\u5bb9\u5168\u6587\u8f93\u51fa\uff0c\u8fd9\u6837\u4f60\u751a\u81f3\u4e0d\u5fc5\u6253\u5f00\u7f51\u9875/\u5e94\u7528\u5c31\u80fd\u9605\u8bfb\uff0c\u4f60\u5f97\u4ee5\u514d\u4e8e Cookie \u7b49\u8ffd\u8e2a\u624b\u6bb5\u7684\u5e72\u6270\uff0c\u4f60\u7684\u9690\u79c1\u4e5f\u5b89\u5168\u65e0\u865e\u3002 \u4f46 RSS \u5bf9\u4e8e\u5185\u5bb9\u53d1\u5e03\u8005\u5374\u5e76\u4e0d\u5c3d\u7136\u53cb\u597d\u3002\u5c24\u5176\u662f\u5728 RSS \u514d\u53bb\u4e86\u9605\u8bfb\u8005\u6253\u5f00\u7f51\u9875/\u5e94\u7528\u7684\u9ebb\u70e6\u3001\u514d\u53bb\u4e86\u53d7 Cookie \u8ffd\u8e2a\u9690\u79c1\u7684\u56f0\u6270\u4e4b\u540e\uff0c\u5185\u5bb9\u53d1\u5e03\u8005\u7684\u5e7f\u544a\u6536\u76ca\u4e0e\u5176\u4ed6\u6f5c\u5728\u5546\u673a\u52bf\u5fc5\u8981\u53d7\u5230\u635f\u5bb3\u3002\u4e8e\u662f\u65f6\u81f3\u4eca\u65e5\uff0c\u8d8a\u6765\u8d8a\u5c11\u7684\u5185\u5bb9\u53d1\u5e03\u8005\u5141\u8bb8\u7528\u6237\u901a\u8fc7 RSS \u6765\u8ba2\u9605\u5185\u5bb9\u3002\u56e0\u6b64\uff0cRSSerpent \u9879\u76ee\u5e0c\u671b\u6539\u5584\u8fd9\u4e00\u5c40\u9762\uff0c\u8ba9\u66f4\u591a\u7528\u6237\u80fd\u591f\u901a\u8fc7 RSS \u72ec\u7acb\u3001\u4fbf\u6377\u3001\u81ea\u7531\u5730\u83b7\u53d6\u4e92\u8054\u7f51\u4e0a\u7684\u4fe1\u606f\u3002 \u5982\u4f55\u4f7f\u7528 RSS \u00b6 \u901a\u5e38\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u94fe\u63a5\u6765\u8ba2\u9605 RSS\u3002RSS \u8ba2\u9605\u94fe\u63a5\u9ed8\u8ba4\u4f1a\u8f93\u51fa\u66f4\u6613\u4e8e\u8ba1\u7b97\u673a\u7406\u89e3\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u4f8b\u5982 XML\u3001JSON \u7b49\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a RSS \u9605\u8bfb\u5668\uff0c\u6765\u5e2e\u52a9\u6211\u4eec\u5c06 RSS \u8ba2\u9605\u94fe\u63a5\u4e2d\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u66f4\u6613\u4e8e\u4eba\u7c7b\u9605\u8bfb\u7684\u5f62\u5f0f\u3002 \u4e0b\u9762\u4ee5\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u7684 RSS \u8ba2\u9605 \u94fe\u63a5 \u5728\u67d0\u4e00\u65f6\u523b\u8f93\u51fa\u7684\u5185\u5bb9\u4e3a\u4f8b\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8be5\u8ba2\u9605\u94fe\u63a5\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u8fd9\u6837\u4e00\u4efd\u96be\u4ee5\u7406\u89e3\u7684 XML \u683c\u5f0f\u6587\u6863\u3002\u8bf7\u4e0d\u8981\u60ca\u614c\uff1a\u4f60\u65e0\u9700\u4ece\u4e8b\u4efb\u4f55\u8ba1\u7b97\u673a\u7f16\u7a0b\u76f8\u5173\u5de5\u4f5c\u5c31\u53ef\u4ee5\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 RSS \ud83d\ude09 \u4f60\u9700\u8981\u5173\u6ce8\u7684\u53ea\u6709\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u7684\u90a3\u4e2a\u94fe\u63a5 \u2014\u2014 \u4e5f\u5c31\u662f\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u7684 RSS \u8ba2\u9605\u94fe\u63a5\u3002\u5c06\u8be5\u94fe\u63a5\u62f7\u8d1d\u5230\u526a\u8d34\u677f\uff0c\u7136\u540e\u6253\u5f00\u4f60\u7684 RSS \u9605\u8bfb\u5668\uff0c\u8f93\u5165\u8be5\u94fe\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u6210\u529f\u8ba2\u9605\u8be5\u4fe1\u606f\u6e90\u4e86\u3002 \u5e02\u9762\u4e0a\u6709\u5927\u91cf RSS \u9605\u8bfb\u5668\u53ef\u4f9b\u9009\u62e9\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u6765\u5bfb\u627e\u4f60\u949f\u610f\u7684\u9605\u8bfb\u5668\u3002 All about RSS \u4ed3\u5e93\u91cc\u4e5f\u6536\u96c6\u4e86\u4e0d\u5c11\u8f83\u4e3a\u6d41\u884c\u7684\u9009\u9879\uff0c\u503c\u5f97\u4f5c\u4e3a\u53c2\u8003\u3002\u672c\u6587\u6863\u4e5f\u5c06\u5217\u4e3e\u82e5\u5e72\u5e38\u89c1\u7684 RSS \u9605\u8bfb\u5668\u4f9b\u8bfb\u8005\u5c1d\u8bd5\uff1a #\u901a\u7528 Feedly \uff0c Inoreader #\u82f9\u679c NetNewsWire \uff0c Reeder #\u5b89\u5353 FeedMe Note RSSerpent \u672c\u8eab\u5e76\u4e0d\u662f RSS \u9605\u8bfb\u5668\uff0cRSSerpent \u7528\u4e8e\u751f\u6210 RSS \u8ba2\u9605\u94fe\u63a5\u3002","title":"\u8ba4\u8bc6 RSS"},{"location":"zh/usage/#\u8ba4\u8bc6-rss","text":"Note \u5728\u4f7f\u7528 RSSerpent \u524d\uff0c\u4f60\u9996\u5148\u9700\u8981\u5bf9 RSS \u6709\u8db3\u591f\u7684\u8ba4\u77e5\u3002\u5982\u679c\u4f60\u76f8\u4fe1\u81ea\u5df1\u5df2\u7ecf\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u53ef\u4ee5\u8df3\u8fc7\u672c\u7ae0\u8282\u3002","title":"\u8ba4\u8bc6 RSS"},{"location":"zh/usage/#\u4ec0\u4e48\u662f-rss","text":"RSS \u662f Really Simple Syndication \u7684\u7f29\u5199\uff0c\u4e2d\u6587\u8bd1\u4f5c\u201c\u7b80\u6613\u4fe1\u606f\u805a\u5408\u201d\u3002RSS \u662f\u4e00\u79cd\u4e92\u8054\u7f51\u6d88\u606f\u6765\u6e90\u7684\u683c\u5f0f\u3002\u5176\u4ed6\u5e38\u89c1\u7684\u6d88\u606f\u6765\u6e90\u683c\u5f0f\u8fd8\u5305\u62ec Atom \u3001 JSON Feed \u7b49\u3002\u4f5c\u4e3a\u6700\u65e9\u51fa\u73b0\u4e5f\u6700\u6d41\u884c\u7684\u6d88\u606f\u6765\u6e90\u683c\u5f0f\uff0cRSS \u4e5f\u5e38\u88ab\u7528\u4f5c RSS\u3001Atom \u7b49\u6d88\u606f\u6765\u6e90\u683c\u5f0f\u7684\u7edf\u79f0\u3002 \u4f5c\u4e3a\u4e00\u79cd\u6d88\u606f\u6765\u6e90\u7684\u683c\u5f0f\uff0cRSS \u80fd\u591f\u5411\u7528\u6237\u63a8\u9001\u7f51\u7edc\u4e0a\u4e00\u4e9b\u9891\u7e41\u66f4\u65b0\u7684\u5185\u5bb9 \u2014\u2014 \u5176\u4e2d\u7684\u4e00\u4e2a\u5178\u578b\u5e94\u7528\u5c31\u662f \u65b0\u95fb \u3002\u65f6\u81f3\u4eca\u65e5\uff0c\u8bb8\u591a\u65b0\u95fb\u53d1\u5e03\u8005\u90fd\u4ecd\u5728\u901a\u8fc7 RSS \u53d1\u5e03\u65b0\u95fb\uff0c\u4f8b\u5982 BBC News\u3001The Guardian \u7b49\u3002","title":"\u4ec0\u4e48\u662f RSS"},{"location":"zh/usage/#\u4e3a\u4ec0\u4e48\u9009\u62e9-rss","text":"RSS \u5bf9\u4e8e\u5185\u5bb9\u9605\u8bfb\u8005\u6765\u8bf4\u662f\u65b9\u4fbf\u7684\u3002\u901a\u8fc7\u8ba2\u9605 RSS\uff0c\u4f60\u53ef\u4ee5\u5c06\u591a\u4e2a\u6765\u6e90\u7684\u4fe1\u606f\u805a\u5408\u5728\u4e00\u5904\u6d4f\u89c8\uff0c\u8fd9\u6837\u5c31\u514d\u53bb\u4e86\u4f60\u5728\u83b7\u53d6\u4fe1\u606f\u65f6\u4e0d\u5f97\u4e0d\u6253\u5f00\u591a\u4e2a\u7f51\u9875/\u5e94\u7528\u9010\u4e00\u67e5\u770b\u7684\u9ebb\u70e6\u3002\u66f4\u68d2\u7684\u662f\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u5bf9\u805a\u5408\u4fe1\u606f\u4f5c\u8fc7\u6ee4\u3001\u7b5b\u9009\u3001\u6392\u5e8f\uff0c\u4ece\u4e2d\u6311\u9009\u51fa\u6700\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u4ee5\u8282\u7701\u4f60\u5b9d\u8d35\u7684\u65f6\u95f4\u3002\u8bb8\u591a RSS \u8fd8\u4f1a\u5c06\u76f8\u5173\u5185\u5bb9\u5168\u6587\u8f93\u51fa\uff0c\u8fd9\u6837\u4f60\u751a\u81f3\u4e0d\u5fc5\u6253\u5f00\u7f51\u9875/\u5e94\u7528\u5c31\u80fd\u9605\u8bfb\uff0c\u4f60\u5f97\u4ee5\u514d\u4e8e Cookie \u7b49\u8ffd\u8e2a\u624b\u6bb5\u7684\u5e72\u6270\uff0c\u4f60\u7684\u9690\u79c1\u4e5f\u5b89\u5168\u65e0\u865e\u3002 \u4f46 RSS \u5bf9\u4e8e\u5185\u5bb9\u53d1\u5e03\u8005\u5374\u5e76\u4e0d\u5c3d\u7136\u53cb\u597d\u3002\u5c24\u5176\u662f\u5728 RSS \u514d\u53bb\u4e86\u9605\u8bfb\u8005\u6253\u5f00\u7f51\u9875/\u5e94\u7528\u7684\u9ebb\u70e6\u3001\u514d\u53bb\u4e86\u53d7 Cookie \u8ffd\u8e2a\u9690\u79c1\u7684\u56f0\u6270\u4e4b\u540e\uff0c\u5185\u5bb9\u53d1\u5e03\u8005\u7684\u5e7f\u544a\u6536\u76ca\u4e0e\u5176\u4ed6\u6f5c\u5728\u5546\u673a\u52bf\u5fc5\u8981\u53d7\u5230\u635f\u5bb3\u3002\u4e8e\u662f\u65f6\u81f3\u4eca\u65e5\uff0c\u8d8a\u6765\u8d8a\u5c11\u7684\u5185\u5bb9\u53d1\u5e03\u8005\u5141\u8bb8\u7528\u6237\u901a\u8fc7 RSS \u6765\u8ba2\u9605\u5185\u5bb9\u3002\u56e0\u6b64\uff0cRSSerpent \u9879\u76ee\u5e0c\u671b\u6539\u5584\u8fd9\u4e00\u5c40\u9762\uff0c\u8ba9\u66f4\u591a\u7528\u6237\u80fd\u591f\u901a\u8fc7 RSS \u72ec\u7acb\u3001\u4fbf\u6377\u3001\u81ea\u7531\u5730\u83b7\u53d6\u4e92\u8054\u7f51\u4e0a\u7684\u4fe1\u606f\u3002","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 RSS"},{"location":"zh/usage/#\u5982\u4f55\u4f7f\u7528-rss","text":"\u901a\u5e38\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u94fe\u63a5\u6765\u8ba2\u9605 RSS\u3002RSS \u8ba2\u9605\u94fe\u63a5\u9ed8\u8ba4\u4f1a\u8f93\u51fa\u66f4\u6613\u4e8e\u8ba1\u7b97\u673a\u7406\u89e3\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u4f8b\u5982 XML\u3001JSON \u7b49\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a RSS \u9605\u8bfb\u5668\uff0c\u6765\u5e2e\u52a9\u6211\u4eec\u5c06 RSS \u8ba2\u9605\u94fe\u63a5\u4e2d\u7684\u5185\u5bb9\u8f6c\u6362\u4e3a\u66f4\u6613\u4e8e\u4eba\u7c7b\u9605\u8bfb\u7684\u5f62\u5f0f\u3002 \u4e0b\u9762\u4ee5\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u7684 RSS \u8ba2\u9605 \u94fe\u63a5 \u5728\u67d0\u4e00\u65f6\u523b\u8f93\u51fa\u7684\u5185\u5bb9\u4e3a\u4f8b\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8be5\u8ba2\u9605\u94fe\u63a5\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u8fd9\u6837\u4e00\u4efd\u96be\u4ee5\u7406\u89e3\u7684 XML \u683c\u5f0f\u6587\u6863\u3002\u8bf7\u4e0d\u8981\u60ca\u614c\uff1a\u4f60\u65e0\u9700\u4ece\u4e8b\u4efb\u4f55\u8ba1\u7b97\u673a\u7f16\u7a0b\u76f8\u5173\u5de5\u4f5c\u5c31\u53ef\u4ee5\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 RSS \ud83d\ude09 \u4f60\u9700\u8981\u5173\u6ce8\u7684\u53ea\u6709\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u7684\u90a3\u4e2a\u94fe\u63a5 \u2014\u2014 \u4e5f\u5c31\u662f\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u7684 RSS \u8ba2\u9605\u94fe\u63a5\u3002\u5c06\u8be5\u94fe\u63a5\u62f7\u8d1d\u5230\u526a\u8d34\u677f\uff0c\u7136\u540e\u6253\u5f00\u4f60\u7684 RSS \u9605\u8bfb\u5668\uff0c\u8f93\u5165\u8be5\u94fe\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u6210\u529f\u8ba2\u9605\u8be5\u4fe1\u606f\u6e90\u4e86\u3002 \u5e02\u9762\u4e0a\u6709\u5927\u91cf RSS \u9605\u8bfb\u5668\u53ef\u4f9b\u9009\u62e9\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u6765\u5bfb\u627e\u4f60\u949f\u610f\u7684\u9605\u8bfb\u5668\u3002 All about RSS \u4ed3\u5e93\u91cc\u4e5f\u6536\u96c6\u4e86\u4e0d\u5c11\u8f83\u4e3a\u6d41\u884c\u7684\u9009\u9879\uff0c\u503c\u5f97\u4f5c\u4e3a\u53c2\u8003\u3002\u672c\u6587\u6863\u4e5f\u5c06\u5217\u4e3e\u82e5\u5e72\u5e38\u89c1\u7684 RSS \u9605\u8bfb\u5668\u4f9b\u8bfb\u8005\u5c1d\u8bd5\uff1a #\u901a\u7528 Feedly \uff0c Inoreader #\u82f9\u679c NetNewsWire \uff0c Reeder #\u5b89\u5353 FeedMe Note RSSerpent \u672c\u8eab\u5e76\u4e0d\u662f RSS \u9605\u8bfb\u5668\uff0cRSSerpent \u7528\u4e8e\u751f\u6210 RSS \u8ba2\u9605\u94fe\u63a5\u3002","title":"\u5982\u4f55\u4f7f\u7528 RSS"},{"location":"zh/usage/router/","text":"\u7406\u89e3\u8def\u7531 \u00b6 \u901a\u5e38\u6765\u8bf4\uff0c\u6bcf\u4e2a RSS \u6d88\u606f\u6765\u6e90\u90fd\u6709\u4e00\u4e2a\u8ba2\u9605\u94fe\u63a5\u3002\u4ee5\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u4e3a\u4f8b\uff0c\u5b83\u7684\u8ba2\u9605\u94fe\u63a5\u662f www.theguardian.com/world/rss \u3002\u5728\u8fd9\u4e2a\u8ba2\u9605\u94fe\u63a5\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u659c\u7ebf / \u524d\u7684\u90e8\u5206\u88ab\u79f0\u4f5c\u57df\u540d\uff08domain\uff09\uff0c\u5373 www.theguardian.com \uff1b\u5176\u540e\u7684\u90e8\u5206\u88ab\u79f0\u4f5c\u8def\u7531\uff08route\uff09\uff0c\u5373 /world/rss \u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u8ba2\u9605\u94fe\u63a5\u60f3\u8c61\u6210\u4e00\u6761\u8def\u7ebf\uff0c\u5176\u4e2d\u57df\u540d\u662f\u5927\u81f4\u7684\u5730\u5740\uff0c\u800c\u8def\u7531\u5219\u5177\u4f53\u5230\u5177\u4f53\u67d0\u697c\u67d0\u5355\u5143\u67d0\u5c42\u67d0\u5ba4\uff1a\u6709\u4e86\u8ba2\u9605\u94fe\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u5faa\u7740\u5b83\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u4f60\u6240\u9700\u8981\u7684\u8d44\u6e90\u3002 Note \u8fd9\u91cc\u5bf9\u8ba2\u9605\u94fe\u63a5\u7684\u5b9a\u4e49\u5e76\u4e0d\u5b8c\u5168\u7b26\u5408 URL \u6807\u51c6\u3002\u6587\u6863\u5bf9\u6b64\u4f5c\u4e86\u4e00\u5b9a\u7684\u7b80\u5316\uff0c\u65b9\u4fbf\u65e0\u6280\u672f\u80cc\u666f\u7684\u8bfb\u8005\u7406\u89e3\u3002 \u5b9e\u4f8b\u4e0e\u8def\u7531 \u00b6 \u5982\u679c\u4f60\u5e0c\u671b\u901a\u8fc7 RSSerpent \u6765\u8ba2\u9605\u4e00\u4e9b\u4e0d\u652f\u6301 RSS \u7684\u7f51\u7ad9\uff0c\u90a3\u4e48\u540c\u7406 \u2014\u2014 \u4f60\u4e5f\u9700\u8981\u627e\u5230\u5bf9\u5e94\u8d44\u6e90\u7684\u8ba2\u9605\u94fe\u63a5\u3002\u5bf9\u4e8e RSSerpent \u6765\u8bf4\uff0c\u8ba2\u9605\u94fe\u63a5\u540c\u6837\u5206\u6210\u57df\u540d\u4e0e\u8def\u7531\u4e24\u90e8\u5206\uff1a \u6bcf\u4e2a\u57df\u540d\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a RSSerpent \u5b9e\u4f8b\uff0c\u4f8b\u5982\u5b98\u65b9\u57df\u540d www.rsserpent.com \u5c31\u5bf9\u5e94\u7740\u5b98\u65b9\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u5728 [\u90e8\u7f72] \u9875\u9762\u4e0a\u627e\u5230\u4e00\u4e9b\u5b98\u65b9\u5b9e\u4f8b\uff0c\u4f46\u6211\u4eec\u66f4\u63a8\u8350\u4f60\u81ea\u5efa\u5b9e\u4f8b\u4ee5\u6ee1\u8db3\u4f60\u4e2a\u4eba\u53d8\u5316\u800c\u591a\u6837\u7684\u9700\u6c42\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRSSerpent \u5b9e\u4f8b\u4e0d\u88c5\u8f7d\u4efb\u4f55\u8def\u7531\u3002\u5b9e\u4f8b\u7684\u7ef4\u62a4\u8005\u9700\u8981\u901a\u8fc7 [\u5b89\u88c5\u63d2\u4ef6] \u6765\u4e3a\u5b9e\u4f8b\u88c5\u8f7d\u8def\u7531\u3002\u5982\u679c\u4f60\u5728\u4f7f\u7528\u67d0\u4e2a\u4ed6\u4eba\u7684\u5b9e\u4f8b\u65f6\u53d1\u73b0\u7f3a\u5c11\u4e86\u4f60\u9700\u8981\u7684\u63d2\u4ef6\u6216\u8def\u7531\uff0c\u4f60\u53ef\u4ee5\u5411\u5b9e\u4f8b\u7ef4\u62a4\u8005\u63d0\u51fa\u7533\u8bf7\uff0c\u6216\u8005\u9009\u62e9\u81ea\u5efa\u5b9e\u4f8b\u3002 Note \u5b9e\u4f8b\u662f\u6307\u4e00\u4efd\u6b63\u5728\u8fd0\u884c\u4e2d\u7684 RSSerpent \u8f6f\u4ef6\u4f53\u3002 Note \u6bcf\u4e2a RSSerpent \u63d2\u4ef6\u90fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8def\u7531\u3002 RSSerpent \u7684 \u5b98\u65b9\u5b9e\u4f8b \u4e0a\u88c5\u8f7d\u4e86\u54d4\u54e9\u54d4\u54e9 \u63d2\u4ef6 \u3002\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u5728\u5b98\u65b9\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u8def\u7531 /bilibili/user/{id}/video \u6765\u8ba2\u9605\u67d0\u4e2a\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u8ba2\u9605 Chubbyemu \u5728\u54d4\u54e9\u54d4\u54e9\u7684\u5b98\u65b9 \u4e2d\u6587\u7ffb\u8bd1\u9891\u9053 \uff0c\u90a3\u4e48\u901a\u8fc7\u62fc\u63a5\u5b98\u65b9\u5b9e\u4f8b\u7684\u57df\u540d www.rsserpent.com \u4e0e\u8def\u7531 /bilibili/user/297786973/video \u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u8ba2\u9605\u94fe\u63a5\uff1a \u8def\u7531\u53c2\u6570 \u00b6 Warning \u672c\u7ae0\u6587\u6863\u5269\u4f59\u5185\u5bb9\u4e2d\u7684\u4efb\u4f55\u793a\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4fdd\u8bc1\u5728\u4efb\u4f55\u5b9e\u4f8b\u4e0a\u771f\u5b9e\u53ef\u7528\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u90e8\u5206\u8def\u7531\u5e76\u4e0d\u662f\u5b8c\u6574\u7684\uff0c\u9700\u8981\u4f60\u586b\u5199\u67d0\u4e9b\u4fe1\u606f\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u8fd9\u4e2a\u8def\u7531\u80fd\u591f\u5e2e\u52a9\u4f60\u8ba2\u9605\u67d0\u4e2a\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\uff0c\u4f46\u5b83\u5374\u65e0\u6cd5\u77e5\u9053\u7528\u4f60\u5e0c\u671b\u8ba2\u9605\u7684\u5177\u4f53\u662f \u54ea\u4e2a \u7528\u6237 \u2014\u2014 \u8fd9\u65f6\u5c31\u9700\u8981\u4f60\u6765\u586b\u5199\u90e8\u5206 \u8def\u7531\u53c2\u6570 \u3002\u6709\u4e86\u8fd9\u4e9b\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u8def\u7531\u624d\u80fd\u5b8c\u6574\u6b63\u5e38\u5730\u5de5\u4f5c\u3002 \u8def\u7531\u53c2\u6570\u4e00\u822c\u88ab\u82b1\u62ec\u53f7 {} \u5305\u88f9\uff0c\u5728\u5b9e\u9645\u586b\u5199\u65f6\uff0c\u4f60\u5e94\u8be5\u53bb\u6389\u8fd9\u5bf9\u82b1\u62ec\u53f7\u3002\u4e0d\u540c\u7684\u8def\u7531\u662f\u7531\u4e0d\u540c\u7684\u63d2\u4ef6\u6765\u63d0\u4f9b\u7684\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728\u76f8\u5173\u63d2\u4ef6\u7684\u6587\u6863\u9875\u9762\u627e\u5230\u5404\u4e2a\u8def\u7531\u53c2\u6570\u7684\u542b\u4e49\u3001\u4ee5\u53ca\u4f60\u5e94\u8be5\u5982\u4f55\u53bb\u83b7\u53d6\u5e76\u586b\u5199\u8fd9\u4e9b\u53c2\u6570\u3002 \u4ee5\u8def\u7531 /bilibili/user/{id}/video \u4e3a\u4f8b\uff0c\u8be5\u8def\u7531\u63a5\u53d7\u4e00\u4e2a\u8def\u7531\u53c2\u6570 id\u3002\u6bcf\u4e2a\u54d4\u54e9\u54d4\u54e9\u7528\u6237\u90fd\u5177\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\uff08\u5373 ID\uff09\uff0c\u4f60\u901a\u5e38\u53ef\u4ee5\u5728\u7528\u6237\u4e3b\u9875\u7684\u5730\u5740\u4e2d\u627e\u5230\u8fd9\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\u3002\u901a\u8fc7\u8fd9\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\uff0c\u8def\u7531\u624d\u80fd\u627e\u5230\u8be5\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\uff0c\u5e76\u5c06\u89c6\u9891\u5217\u8868\u8f93\u51fa\u4e3a\u8ba2\u9605\u94fe\u63a5\u4f9b\u4f60\u8ba2\u9605\u3002 \u67e5\u8be2\u53c2\u6570 \u00b6 \u8def\u7531\u53c2\u6570\u662f\u5fc5\u586b\u7684\u3002\u4f46\u6709\u65f6\u5019\uff0c\u6709\u4e9b\u8def\u7531\u8fd8\u9700\u8981\u63a5\u53d7\u4e00\u4e9b\u9009\u586b\u7684\u3001\u53ef\u53d8\u7684\u3001\u6709\u6761\u4ef6\u7684\u53c2\u6570 \u2014\u2014 \u8fd9\u4e9b\u53c2\u6570\u88ab\u79f0\u4e3a \u67e5\u8be2\u53c2\u6570 \uff1a \u67e5\u8be2\u53c2\u6570\u5e94\u7f6e\u4e8e\u8def\u7531\u5c3e\u90e8\uff0c\u4ee5 ? \u95ee\u53f7\u4e0e\u8def\u7531\u4e3b\u4f53\u9694\u5f00\uff1b \u67e5\u8be2\u53c2\u6570\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u5f62\u5982 {name}={value} \uff1b \u67e5\u8be2\u53c2\u6570\u4e4b\u95f4\u4ee5 & \u9694\u5f00\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u8def\u7531 /bilibili/user/{id}/video \u63a5\u53d7 sort \u4e0e order \u4e24\u4e2a\u67e5\u8be2\u53c2\u6570\uff1a\u5176\u4e2d sort \u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u7684\u6392\u5e8f\u6807\u51c6\uff0c order \u5219\u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u7684\u6392\u5e8f\u5347/\u964d\u5e8f\u3002\u8003\u8651\u5230\u7edd\u5927\u591a\u6570\u7528\u6237\u5e0c\u671b\u8ba2\u9605\u67d0\u7528\u6237\u53d1\u5e03\u7684\u6700\u65b0\u89c6\u9891\uff0c\u56e0\u6b64\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff08\u5373\u4e0d\u4f20\u5165\u4efb\u4f55\u67e5\u8be2\u53c2\u6570\uff09\uff0c\u8def\u7531\u4f1a\u6309\u7167\u65f6\u95f4\u964d\u5e8f\u5bf9\u89c6\u9891\u8fdb\u884c\u6392\u5e8f\u3002\u4f46\u5047\u8bbe\u4f60\u9700\u8981\u8ba2\u9605\u67d0\u7528\u6237\u6700\u70ed\u95e8\u7684\u89c6\u9891\uff0c\u5219\u8def\u7531\u5e94\u4e3a /bilibili/user/{id}/video?sort=hot&order=desc \u3002","title":"\u7406\u89e3\u8def\u7531"},{"location":"zh/usage/router/#\u7406\u89e3\u8def\u7531","text":"\u901a\u5e38\u6765\u8bf4\uff0c\u6bcf\u4e2a RSS \u6d88\u606f\u6765\u6e90\u90fd\u6709\u4e00\u4e2a\u8ba2\u9605\u94fe\u63a5\u3002\u4ee5\u536b\u62a5\u4e16\u754c\u65b0\u95fb\u4e3a\u4f8b\uff0c\u5b83\u7684\u8ba2\u9605\u94fe\u63a5\u662f www.theguardian.com/world/rss \u3002\u5728\u8fd9\u4e2a\u8ba2\u9605\u94fe\u63a5\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u659c\u7ebf / \u524d\u7684\u90e8\u5206\u88ab\u79f0\u4f5c\u57df\u540d\uff08domain\uff09\uff0c\u5373 www.theguardian.com \uff1b\u5176\u540e\u7684\u90e8\u5206\u88ab\u79f0\u4f5c\u8def\u7531\uff08route\uff09\uff0c\u5373 /world/rss \u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u8ba2\u9605\u94fe\u63a5\u60f3\u8c61\u6210\u4e00\u6761\u8def\u7ebf\uff0c\u5176\u4e2d\u57df\u540d\u662f\u5927\u81f4\u7684\u5730\u5740\uff0c\u800c\u8def\u7531\u5219\u5177\u4f53\u5230\u5177\u4f53\u67d0\u697c\u67d0\u5355\u5143\u67d0\u5c42\u67d0\u5ba4\uff1a\u6709\u4e86\u8ba2\u9605\u94fe\u63a5\uff0c\u4f60\u5c31\u53ef\u4ee5\u5faa\u7740\u5b83\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u4f60\u6240\u9700\u8981\u7684\u8d44\u6e90\u3002 Note \u8fd9\u91cc\u5bf9\u8ba2\u9605\u94fe\u63a5\u7684\u5b9a\u4e49\u5e76\u4e0d\u5b8c\u5168\u7b26\u5408 URL \u6807\u51c6\u3002\u6587\u6863\u5bf9\u6b64\u4f5c\u4e86\u4e00\u5b9a\u7684\u7b80\u5316\uff0c\u65b9\u4fbf\u65e0\u6280\u672f\u80cc\u666f\u7684\u8bfb\u8005\u7406\u89e3\u3002","title":"\u7406\u89e3\u8def\u7531"},{"location":"zh/usage/router/#\u5b9e\u4f8b\u4e0e\u8def\u7531","text":"\u5982\u679c\u4f60\u5e0c\u671b\u901a\u8fc7 RSSerpent \u6765\u8ba2\u9605\u4e00\u4e9b\u4e0d\u652f\u6301 RSS \u7684\u7f51\u7ad9\uff0c\u90a3\u4e48\u540c\u7406 \u2014\u2014 \u4f60\u4e5f\u9700\u8981\u627e\u5230\u5bf9\u5e94\u8d44\u6e90\u7684\u8ba2\u9605\u94fe\u63a5\u3002\u5bf9\u4e8e RSSerpent \u6765\u8bf4\uff0c\u8ba2\u9605\u94fe\u63a5\u540c\u6837\u5206\u6210\u57df\u540d\u4e0e\u8def\u7531\u4e24\u90e8\u5206\uff1a \u6bcf\u4e2a\u57df\u540d\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a RSSerpent \u5b9e\u4f8b\uff0c\u4f8b\u5982\u5b98\u65b9\u57df\u540d www.rsserpent.com \u5c31\u5bf9\u5e94\u7740\u5b98\u65b9\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u5728 [\u90e8\u7f72] \u9875\u9762\u4e0a\u627e\u5230\u4e00\u4e9b\u5b98\u65b9\u5b9e\u4f8b\uff0c\u4f46\u6211\u4eec\u66f4\u63a8\u8350\u4f60\u81ea\u5efa\u5b9e\u4f8b\u4ee5\u6ee1\u8db3\u4f60\u4e2a\u4eba\u53d8\u5316\u800c\u591a\u6837\u7684\u9700\u6c42\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRSSerpent \u5b9e\u4f8b\u4e0d\u88c5\u8f7d\u4efb\u4f55\u8def\u7531\u3002\u5b9e\u4f8b\u7684\u7ef4\u62a4\u8005\u9700\u8981\u901a\u8fc7 [\u5b89\u88c5\u63d2\u4ef6] \u6765\u4e3a\u5b9e\u4f8b\u88c5\u8f7d\u8def\u7531\u3002\u5982\u679c\u4f60\u5728\u4f7f\u7528\u67d0\u4e2a\u4ed6\u4eba\u7684\u5b9e\u4f8b\u65f6\u53d1\u73b0\u7f3a\u5c11\u4e86\u4f60\u9700\u8981\u7684\u63d2\u4ef6\u6216\u8def\u7531\uff0c\u4f60\u53ef\u4ee5\u5411\u5b9e\u4f8b\u7ef4\u62a4\u8005\u63d0\u51fa\u7533\u8bf7\uff0c\u6216\u8005\u9009\u62e9\u81ea\u5efa\u5b9e\u4f8b\u3002 Note \u5b9e\u4f8b\u662f\u6307\u4e00\u4efd\u6b63\u5728\u8fd0\u884c\u4e2d\u7684 RSSerpent \u8f6f\u4ef6\u4f53\u3002 Note \u6bcf\u4e2a RSSerpent \u63d2\u4ef6\u90fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8def\u7531\u3002 RSSerpent \u7684 \u5b98\u65b9\u5b9e\u4f8b \u4e0a\u88c5\u8f7d\u4e86\u54d4\u54e9\u54d4\u54e9 \u63d2\u4ef6 \u3002\u56e0\u6b64\uff0c\u4f60\u53ef\u4ee5\u5728\u5b98\u65b9\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u8def\u7531 /bilibili/user/{id}/video \u6765\u8ba2\u9605\u67d0\u4e2a\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u8ba2\u9605 Chubbyemu \u5728\u54d4\u54e9\u54d4\u54e9\u7684\u5b98\u65b9 \u4e2d\u6587\u7ffb\u8bd1\u9891\u9053 \uff0c\u90a3\u4e48\u901a\u8fc7\u62fc\u63a5\u5b98\u65b9\u5b9e\u4f8b\u7684\u57df\u540d www.rsserpent.com \u4e0e\u8def\u7531 /bilibili/user/297786973/video \u4f60\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u8ba2\u9605\u94fe\u63a5\uff1a","title":"\u5b9e\u4f8b\u4e0e\u8def\u7531"},{"location":"zh/usage/router/#\u8def\u7531\u53c2\u6570","text":"Warning \u672c\u7ae0\u6587\u6863\u5269\u4f59\u5185\u5bb9\u4e2d\u7684\u4efb\u4f55\u793a\u4f8b\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u4fdd\u8bc1\u5728\u4efb\u4f55\u5b9e\u4f8b\u4e0a\u771f\u5b9e\u53ef\u7528\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u90e8\u5206\u8def\u7531\u5e76\u4e0d\u662f\u5b8c\u6574\u7684\uff0c\u9700\u8981\u4f60\u586b\u5199\u67d0\u4e9b\u4fe1\u606f\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u8fd9\u4e2a\u8def\u7531\u80fd\u591f\u5e2e\u52a9\u4f60\u8ba2\u9605\u67d0\u4e2a\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\uff0c\u4f46\u5b83\u5374\u65e0\u6cd5\u77e5\u9053\u7528\u4f60\u5e0c\u671b\u8ba2\u9605\u7684\u5177\u4f53\u662f \u54ea\u4e2a \u7528\u6237 \u2014\u2014 \u8fd9\u65f6\u5c31\u9700\u8981\u4f60\u6765\u586b\u5199\u90e8\u5206 \u8def\u7531\u53c2\u6570 \u3002\u6709\u4e86\u8fd9\u4e9b\u53c2\u6570\u4f5c\u4e3a\u8f93\u5165\uff0c\u8def\u7531\u624d\u80fd\u5b8c\u6574\u6b63\u5e38\u5730\u5de5\u4f5c\u3002 \u8def\u7531\u53c2\u6570\u4e00\u822c\u88ab\u82b1\u62ec\u53f7 {} \u5305\u88f9\uff0c\u5728\u5b9e\u9645\u586b\u5199\u65f6\uff0c\u4f60\u5e94\u8be5\u53bb\u6389\u8fd9\u5bf9\u82b1\u62ec\u53f7\u3002\u4e0d\u540c\u7684\u8def\u7531\u662f\u7531\u4e0d\u540c\u7684\u63d2\u4ef6\u6765\u63d0\u4f9b\u7684\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728\u76f8\u5173\u63d2\u4ef6\u7684\u6587\u6863\u9875\u9762\u627e\u5230\u5404\u4e2a\u8def\u7531\u53c2\u6570\u7684\u542b\u4e49\u3001\u4ee5\u53ca\u4f60\u5e94\u8be5\u5982\u4f55\u53bb\u83b7\u53d6\u5e76\u586b\u5199\u8fd9\u4e9b\u53c2\u6570\u3002 \u4ee5\u8def\u7531 /bilibili/user/{id}/video \u4e3a\u4f8b\uff0c\u8be5\u8def\u7531\u63a5\u53d7\u4e00\u4e2a\u8def\u7531\u53c2\u6570 id\u3002\u6bcf\u4e2a\u54d4\u54e9\u54d4\u54e9\u7528\u6237\u90fd\u5177\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\uff08\u5373 ID\uff09\uff0c\u4f60\u901a\u5e38\u53ef\u4ee5\u5728\u7528\u6237\u4e3b\u9875\u7684\u5730\u5740\u4e2d\u627e\u5230\u8fd9\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\u3002\u901a\u8fc7\u8fd9\u4e2a\u552f\u4e00\u6807\u8bc6\u7801\uff0c\u8def\u7531\u624d\u80fd\u627e\u5230\u8be5\u7528\u6237\u53d1\u5e03\u7684\u89c6\u9891\uff0c\u5e76\u5c06\u89c6\u9891\u5217\u8868\u8f93\u51fa\u4e3a\u8ba2\u9605\u94fe\u63a5\u4f9b\u4f60\u8ba2\u9605\u3002","title":"\u8def\u7531\u53c2\u6570"},{"location":"zh/usage/router/#\u67e5\u8be2\u53c2\u6570","text":"\u8def\u7531\u53c2\u6570\u662f\u5fc5\u586b\u7684\u3002\u4f46\u6709\u65f6\u5019\uff0c\u6709\u4e9b\u8def\u7531\u8fd8\u9700\u8981\u63a5\u53d7\u4e00\u4e9b\u9009\u586b\u7684\u3001\u53ef\u53d8\u7684\u3001\u6709\u6761\u4ef6\u7684\u53c2\u6570 \u2014\u2014 \u8fd9\u4e9b\u53c2\u6570\u88ab\u79f0\u4e3a \u67e5\u8be2\u53c2\u6570 \uff1a \u67e5\u8be2\u53c2\u6570\u5e94\u7f6e\u4e8e\u8def\u7531\u5c3e\u90e8\uff0c\u4ee5 ? \u95ee\u53f7\u4e0e\u8def\u7531\u4e3b\u4f53\u9694\u5f00\uff1b \u67e5\u8be2\u53c2\u6570\u53ef\u4ee5\u6709\u4efb\u610f\u591a\u4e2a\uff0c\u6bcf\u4e2a\u5f62\u5982 {name}={value} \uff1b \u67e5\u8be2\u53c2\u6570\u4e4b\u95f4\u4ee5 & \u9694\u5f00\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5047\u8bbe\u8def\u7531 /bilibili/user/{id}/video \u63a5\u53d7 sort \u4e0e order \u4e24\u4e2a\u67e5\u8be2\u53c2\u6570\uff1a\u5176\u4e2d sort \u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u7684\u6392\u5e8f\u6807\u51c6\uff0c order \u5219\u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u7684\u6392\u5e8f\u5347/\u964d\u5e8f\u3002\u8003\u8651\u5230\u7edd\u5927\u591a\u6570\u7528\u6237\u5e0c\u671b\u8ba2\u9605\u67d0\u7528\u6237\u53d1\u5e03\u7684\u6700\u65b0\u89c6\u9891\uff0c\u56e0\u6b64\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff08\u5373\u4e0d\u4f20\u5165\u4efb\u4f55\u67e5\u8be2\u53c2\u6570\uff09\uff0c\u8def\u7531\u4f1a\u6309\u7167\u65f6\u95f4\u964d\u5e8f\u5bf9\u89c6\u9891\u8fdb\u884c\u6392\u5e8f\u3002\u4f46\u5047\u8bbe\u4f60\u9700\u8981\u8ba2\u9605\u67d0\u7528\u6237\u6700\u70ed\u95e8\u7684\u89c6\u9891\uff0c\u5219\u8def\u7531\u5e94\u4e3a /bilibili/user/{id}/video?sort=hot&order=desc \u3002","title":"\u67e5\u8be2\u53c2\u6570"}]}